{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Outline\n",
    "<div class=\"alert alert-block alert-success\" style=\"margin-top:20px\">\n",
    "    <font color=#FF0000>\n",
    "    \n",
    "- [ 1 - Packages ](#1)\n",
    "- [ 2 - Logistic Regression](#2)\n",
    "  - [ 2.1 Problem Statement](#2.1)\n",
    "  - [ 2.2 Goals of the Case Study](#2.3)\n",
    "  - [ 2.3 Loading and Describing the data](#2.3)\n",
    "  - [ 2.4 Exploratory Data Analysis](#2.4)\n",
    "      - [2.4.1 Categorical Variables](#2.4.1)\n",
    "      - [2.4.2 Numerical Variables](#2.4.2)\n",
    "      - [2.4.3 Dummey Variables Creation](#2.4.3)\n",
    "  - [ 2.5 Feature Scaling](#2.5)\n",
    "  - [ 2.6 Logistic Regression, Manually](#2.6)\n",
    "      - [ 2.6.1 View Data](#2.6.1)\n",
    "      - [ 2.6.2 Sigmoid function](#2.6.2)\n",
    "      - [ 2.6.3 Cost function for logistic regression](#2.6.3)\n",
    "      - [ 2.6.4 Gradient for logistic regression](#2.6.4)\n",
    "      - [ 2.6.5 Learning parameters using gradient descent ](#2.6.5)\n",
    "      - [ 2.6.6 Plotting the decision boundary](#2.6.6)\n",
    "      - [ 2.6.7 Evaluating logistic regression](#2.6.7)\n",
    "      - [ 2.6.8 Feature mapping](#2.6.8)\n",
    "  - [ 2.7 Regularized Logistic Regression, Manually](#2.7)\n",
    "      - [ 2.7.1 Cost function for regularized logistic regression](#2.7.1)\n",
    "      - [ 2.7.2 Gradient for regularized logistic regression](#2.7.2)\n",
    "  - [ 2.8 Logistic Model ](#2.8)\n",
    "      - [ 2.8.1 Building Model](#2.8.1)\n",
    "- [3 - References](#3)\n",
    "  </font>\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"1\"></a>\n",
    "## 1 - Packages \n",
    "\n",
    "First, let's run the cell below to import all the packages that we will need during this assignment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import copy\n",
    "import math\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn import metrics\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.feature_selection import RFE\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"2\"></a>\n",
    "## 2 - Logistic Regression\n",
    "\n",
    "In this part of the exercise, you will build a logistic regression model to predict whether a student gets admitted into a university.\n",
    "\n",
    "<a name=\"2.1\"></a>\n",
    "### 2.1 Problem Statement\n",
    "\n",
    "An education company named X Education sells online courses to industry professionals. On any given day, many professionals who are interested in the courses land on their website and browse for courses.\n",
    "\n",
    "The company markets its courses on several websites and search engines like Google. Once these people land on the website, they might browse the courses or fill up a form for the course or watch some videos. When these people fill up a form providing their email address or phone number, they are classified to be a lead. Moreover, the company also gets leads through past referrals. Once these leads are acquired, employees from the sales team start making calls, writing emails, etc. Through this process, some of the leads get converted while most do not. The typical lead conversion rate at X education is around 30%.\n",
    "\n",
    "X Education has appointed you to help them select the most promising leads, i.e. the leads that are most likely to convert into paying customers. The company requires you to build a model wherein you need to assign a lead score to each of the leads such that the customers with higher lead score have a higher conversion chance and the customers with lower lead score have a lower conversion chance. The CEO, in particular, has given a ballpark of the target lead conversion rate to be around 80%.\n",
    "\n",
    "<a name=\"2.2\"></a>\n",
    "### 2.2 Goals of the Case Study\n",
    "\n",
    "*Build a logistic regression model to assign a lead score between 0 and 100 to each of the leads which can be used by the company to target potential leads. A higher score would mean that the lead is hot, i.e. is most likely to convert whereas a lower score would mean that the lead is cold and will mostly not get converted.*\n",
    "\n",
    "\n",
    "\n",
    "<a name=\"2.3\"></a>\n",
    "### 2.3 Loading and Describing the data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prospect ID</th>\n",
       "      <th>Lead Number</th>\n",
       "      <th>Lead Origin</th>\n",
       "      <th>Lead Source</th>\n",
       "      <th>Do Not Email</th>\n",
       "      <th>Do Not Call</th>\n",
       "      <th>Converted</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>...</th>\n",
       "      <th>Get updates on DM Content</th>\n",
       "      <th>Lead Profile</th>\n",
       "      <th>City</th>\n",
       "      <th>Asymmetrique Activity Index</th>\n",
       "      <th>Asymmetrique Profile Index</th>\n",
       "      <th>Asymmetrique Activity Score</th>\n",
       "      <th>Asymmetrique Profile Score</th>\n",
       "      <th>I agree to pay the amount through cheque</th>\n",
       "      <th>A free copy of Mastering The Interview</th>\n",
       "      <th>Last Notable Activity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7927b2df-8bba-4d29-b9a2-b6e0beafe620</td>\n",
       "      <td>660737</td>\n",
       "      <td>API</td>\n",
       "      <td>Olark Chat</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Select</td>\n",
       "      <td>Select</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Modified</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2a272436-5132-4136-86fa-dcc88c88f482</td>\n",
       "      <td>660728</td>\n",
       "      <td>API</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>674</td>\n",
       "      <td>2.5</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Select</td>\n",
       "      <td>Select</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Email Opened</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8cc8c611-a219-4f35-ad23-fdfd2656bd8a</td>\n",
       "      <td>660727</td>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1532</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Potential Lead</td>\n",
       "      <td>Mumbai</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>01.High</td>\n",
       "      <td>14.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Email Opened</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 37 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Prospect ID  Lead Number              Lead Origin  \\\n",
       "0  7927b2df-8bba-4d29-b9a2-b6e0beafe620       660737                      API   \n",
       "1  2a272436-5132-4136-86fa-dcc88c88f482       660728                      API   \n",
       "2  8cc8c611-a219-4f35-ad23-fdfd2656bd8a       660727  Landing Page Submission   \n",
       "\n",
       "      Lead Source Do Not Email Do Not Call  Converted  TotalVisits  \\\n",
       "0      Olark Chat           No          No          0          0.0   \n",
       "1  Organic Search           No          No          0          5.0   \n",
       "2  Direct Traffic           No          No          1          2.0   \n",
       "\n",
       "   Total Time Spent on Website  Page Views Per Visit  ...  \\\n",
       "0                            0                   0.0  ...   \n",
       "1                          674                   2.5  ...   \n",
       "2                         1532                   2.0  ...   \n",
       "\n",
       "  Get updates on DM Content    Lead Profile    City  \\\n",
       "0                        No          Select  Select   \n",
       "1                        No          Select  Select   \n",
       "2                        No  Potential Lead  Mumbai   \n",
       "\n",
       "  Asymmetrique Activity Index Asymmetrique Profile Index  \\\n",
       "0                   02.Medium                  02.Medium   \n",
       "1                   02.Medium                  02.Medium   \n",
       "2                   02.Medium                    01.High   \n",
       "\n",
       "  Asymmetrique Activity Score Asymmetrique Profile Score  \\\n",
       "0                        15.0                       15.0   \n",
       "1                        15.0                       15.0   \n",
       "2                        14.0                       20.0   \n",
       "\n",
       "  I agree to pay the amount through cheque  \\\n",
       "0                                       No   \n",
       "1                                       No   \n",
       "2                                       No   \n",
       "\n",
       "  A free copy of Mastering The Interview Last Notable Activity  \n",
       "0                                     No              Modified  \n",
       "1                                     No          Email Opened  \n",
       "2                                    Yes          Email Opened  \n",
       "\n",
       "[3 rows x 37 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's import the data\n",
    "df = pd.read_csv(\"Leads.csv\")\n",
    "df.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape of data:(9240, 37) \n",
      "\n",
      "=========================================================================== \n",
      "\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 9240 entries, 0 to 9239\n",
      "Data columns (total 37 columns):\n",
      " #   Column                                         Non-Null Count  Dtype  \n",
      "---  ------                                         --------------  -----  \n",
      " 0   Prospect ID                                    9240 non-null   object \n",
      " 1   Lead Number                                    9240 non-null   int64  \n",
      " 2   Lead Origin                                    9240 non-null   object \n",
      " 3   Lead Source                                    9204 non-null   object \n",
      " 4   Do Not Email                                   9240 non-null   object \n",
      " 5   Do Not Call                                    9240 non-null   object \n",
      " 6   Converted                                      9240 non-null   int64  \n",
      " 7   TotalVisits                                    9103 non-null   float64\n",
      " 8   Total Time Spent on Website                    9240 non-null   int64  \n",
      " 9   Page Views Per Visit                           9103 non-null   float64\n",
      " 10  Last Activity                                  9137 non-null   object \n",
      " 11  Country                                        6779 non-null   object \n",
      " 12  Specialization                                 7802 non-null   object \n",
      " 13  How did you hear about X Education             7033 non-null   object \n",
      " 14  What is your current occupation                6550 non-null   object \n",
      " 15  What matters most to you in choosing a course  6531 non-null   object \n",
      " 16  Search                                         9240 non-null   object \n",
      " 17  Magazine                                       9240 non-null   object \n",
      " 18  Newspaper Article                              9240 non-null   object \n",
      " 19  X Education Forums                             9240 non-null   object \n",
      " 20  Newspaper                                      9240 non-null   object \n",
      " 21  Digital Advertisement                          9240 non-null   object \n",
      " 22  Through Recommendations                        9240 non-null   object \n",
      " 23  Receive More Updates About Our Courses         9240 non-null   object \n",
      " 24  Tags                                           5887 non-null   object \n",
      " 25  Lead Quality                                   4473 non-null   object \n",
      " 26  Update me on Supply Chain Content              9240 non-null   object \n",
      " 27  Get updates on DM Content                      9240 non-null   object \n",
      " 28  Lead Profile                                   6531 non-null   object \n",
      " 29  City                                           7820 non-null   object \n",
      " 30  Asymmetrique Activity Index                    5022 non-null   object \n",
      " 31  Asymmetrique Profile Index                     5022 non-null   object \n",
      " 32  Asymmetrique Activity Score                    5022 non-null   float64\n",
      " 33  Asymmetrique Profile Score                     5022 non-null   float64\n",
      " 34  I agree to pay the amount through cheque       9240 non-null   object \n",
      " 35  A free copy of Mastering The Interview         9240 non-null   object \n",
      " 36  Last Notable Activity                          9240 non-null   object \n",
      "dtypes: float64(4), int64(3), object(30)\n",
      "memory usage: 2.6+ MB\n",
      "None \n",
      "\n",
      "===========================================================================\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Lead Number</th>\n",
       "      <th>Converted</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Asymmetrique Activity Score</th>\n",
       "      <th>Asymmetrique Profile Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>9240.000000</td>\n",
       "      <td>9240.000000</td>\n",
       "      <td>9103.000000</td>\n",
       "      <td>9240.000000</td>\n",
       "      <td>9103.000000</td>\n",
       "      <td>5022.000000</td>\n",
       "      <td>5022.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>617188.435606</td>\n",
       "      <td>0.385390</td>\n",
       "      <td>3.445238</td>\n",
       "      <td>487.698268</td>\n",
       "      <td>2.362820</td>\n",
       "      <td>14.306252</td>\n",
       "      <td>16.344883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>23405.995698</td>\n",
       "      <td>0.486714</td>\n",
       "      <td>4.854853</td>\n",
       "      <td>548.021466</td>\n",
       "      <td>2.161418</td>\n",
       "      <td>1.386694</td>\n",
       "      <td>1.811395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>579533.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>11.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>596484.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>615479.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>248.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>16.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>637387.250000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>936.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>18.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>660737.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>251.000000</td>\n",
       "      <td>2272.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>20.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Lead Number    Converted  TotalVisits  Total Time Spent on Website  \\\n",
       "count    9240.000000  9240.000000  9103.000000                  9240.000000   \n",
       "mean   617188.435606     0.385390     3.445238                   487.698268   \n",
       "std     23405.995698     0.486714     4.854853                   548.021466   \n",
       "min    579533.000000     0.000000     0.000000                     0.000000   \n",
       "25%    596484.500000     0.000000     1.000000                    12.000000   \n",
       "50%    615479.000000     0.000000     3.000000                   248.000000   \n",
       "75%    637387.250000     1.000000     5.000000                   936.000000   \n",
       "max    660737.000000     1.000000   251.000000                  2272.000000   \n",
       "\n",
       "       Page Views Per Visit  Asymmetrique Activity Score  \\\n",
       "count           9103.000000                  5022.000000   \n",
       "mean               2.362820                    14.306252   \n",
       "std                2.161418                     1.386694   \n",
       "min                0.000000                     7.000000   \n",
       "25%                1.000000                    14.000000   \n",
       "50%                2.000000                    14.000000   \n",
       "75%                3.000000                    15.000000   \n",
       "max               55.000000                    18.000000   \n",
       "\n",
       "       Asymmetrique Profile Score  \n",
       "count                 5022.000000  \n",
       "mean                    16.344883  \n",
       "std                      1.811395  \n",
       "min                     11.000000  \n",
       "25%                     15.000000  \n",
       "50%                     16.000000  \n",
       "75%                     18.000000  \n",
       "max                     20.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(f'Shape of data:{df.shape}', '\\n')\n",
    "print('='*75,'\\n')\n",
    "print(df.info(),'\\n')\n",
    "print('='*75)\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**It seems there are a lot of missing values data that need to deal.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"2.4\"></a>\n",
    "### 2.4 EXPLORATORY DATA ANALYSIS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There were not found any duplicated data ^_^\n",
      "--------------------------------------------------\n",
      "Since Lead Number and Prospect ID have all unique values, let's drop them\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Lead Origin</th>\n",
       "      <th>Lead Source</th>\n",
       "      <th>Do Not Email</th>\n",
       "      <th>Do Not Call</th>\n",
       "      <th>Converted</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Last Activity</th>\n",
       "      <th>Country</th>\n",
       "      <th>...</th>\n",
       "      <th>Get updates on DM Content</th>\n",
       "      <th>Lead Profile</th>\n",
       "      <th>City</th>\n",
       "      <th>Asymmetrique Activity Index</th>\n",
       "      <th>Asymmetrique Profile Index</th>\n",
       "      <th>Asymmetrique Activity Score</th>\n",
       "      <th>Asymmetrique Profile Score</th>\n",
       "      <th>I agree to pay the amount through cheque</th>\n",
       "      <th>A free copy of Mastering The Interview</th>\n",
       "      <th>Last Notable Activity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>API</td>\n",
       "      <td>Olark Chat</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Page Visited on Website</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Select</td>\n",
       "      <td>Select</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Modified</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>API</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>674</td>\n",
       "      <td>2.5</td>\n",
       "      <td>Email Opened</td>\n",
       "      <td>India</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Select</td>\n",
       "      <td>Select</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Email Opened</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Lead Origin     Lead Source Do Not Email Do Not Call  Converted  \\\n",
       "0         API      Olark Chat           No          No          0   \n",
       "1         API  Organic Search           No          No          0   \n",
       "\n",
       "   TotalVisits  Total Time Spent on Website  Page Views Per Visit  \\\n",
       "0          0.0                            0                   0.0   \n",
       "1          5.0                          674                   2.5   \n",
       "\n",
       "             Last Activity Country  ... Get updates on DM Content  \\\n",
       "0  Page Visited on Website     NaN  ...                        No   \n",
       "1             Email Opened   India  ...                        No   \n",
       "\n",
       "  Lead Profile    City Asymmetrique Activity Index Asymmetrique Profile Index  \\\n",
       "0       Select  Select                   02.Medium                  02.Medium   \n",
       "1       Select  Select                   02.Medium                  02.Medium   \n",
       "\n",
       "  Asymmetrique Activity Score Asymmetrique Profile Score  \\\n",
       "0                        15.0                       15.0   \n",
       "1                        15.0                       15.0   \n",
       "\n",
       "  I agree to pay the amount through cheque  \\\n",
       "0                                       No   \n",
       "1                                       No   \n",
       "\n",
       "  A free copy of Mastering The Interview Last Notable Activity  \n",
       "0                                     No              Modified  \n",
       "1                                     No          Email Opened  \n",
       "\n",
       "[2 rows x 35 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#let's check for duplicates.\n",
    "\n",
    "if sum(df.duplicated(subset='Prospect ID'))==0 and sum(df.duplicated(subset='Lead Number'))==0:\n",
    "    print('There were not found any duplicated data ^_^')\n",
    "    print('-'*50)\n",
    "    print(\"Since Lead Number and Prospect ID have all unique values, let's drop them\")\n",
    "    df.drop(['Prospect ID', 'Lead Number'], axis=1, inplace=True)\n",
    "    \n",
    "else: print('You should deal with duplicate data')\n",
    "df.head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**_There are many 'select' values that seem the customers didn't fill them. let's replace them with Non_**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Lead Origin</th>\n",
       "      <th>Lead Source</th>\n",
       "      <th>Do Not Email</th>\n",
       "      <th>Do Not Call</th>\n",
       "      <th>Converted</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Last Activity</th>\n",
       "      <th>Country</th>\n",
       "      <th>...</th>\n",
       "      <th>Get updates on DM Content</th>\n",
       "      <th>Lead Profile</th>\n",
       "      <th>City</th>\n",
       "      <th>Asymmetrique Activity Index</th>\n",
       "      <th>Asymmetrique Profile Index</th>\n",
       "      <th>Asymmetrique Activity Score</th>\n",
       "      <th>Asymmetrique Profile Score</th>\n",
       "      <th>I agree to pay the amount through cheque</th>\n",
       "      <th>A free copy of Mastering The Interview</th>\n",
       "      <th>Last Notable Activity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9238</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Google</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>499</td>\n",
       "      <td>3.0</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>India</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Other Metro Cities</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>15.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>SMS Sent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9239</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1279</td>\n",
       "      <td>3.0</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Bangladesh</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Potential Lead</td>\n",
       "      <td>Other Cities</td>\n",
       "      <td>02.Medium</td>\n",
       "      <td>01.High</td>\n",
       "      <td>15.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Modified</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Lead Origin     Lead Source Do Not Email Do Not Call  \\\n",
       "9238  Landing Page Submission          Google           No          No   \n",
       "9239  Landing Page Submission  Direct Traffic           No          No   \n",
       "\n",
       "      Converted  TotalVisits  Total Time Spent on Website  \\\n",
       "9238          1          3.0                          499   \n",
       "9239          1          6.0                         1279   \n",
       "\n",
       "      Page Views Per Visit Last Activity     Country  ...  \\\n",
       "9238                   3.0      SMS Sent       India  ...   \n",
       "9239                   3.0      SMS Sent  Bangladesh  ...   \n",
       "\n",
       "     Get updates on DM Content    Lead Profile                City  \\\n",
       "9238                        No             NaN  Other Metro Cities   \n",
       "9239                        No  Potential Lead        Other Cities   \n",
       "\n",
       "     Asymmetrique Activity Index Asymmetrique Profile Index  \\\n",
       "9238                   02.Medium                  02.Medium   \n",
       "9239                   02.Medium                    01.High   \n",
       "\n",
       "     Asymmetrique Activity Score Asymmetrique Profile Score  \\\n",
       "9238                        15.0                       16.0   \n",
       "9239                        15.0                       18.0   \n",
       "\n",
       "     I agree to pay the amount through cheque  \\\n",
       "9238                                       No   \n",
       "9239                                       No   \n",
       "\n",
       "     A free copy of Mastering The Interview Last Notable Activity  \n",
       "9238                                     No              SMS Sent  \n",
       "9239                                    Yes              Modified  \n",
       "\n",
       "[2 rows x 35 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df.replace('Select', np.nan)\n",
    "df.tail(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Good, let's check the percentage of Null values**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Lead Origin                                       0.00\n",
       "Lead Source                                       0.39\n",
       "Do Not Email                                      0.00\n",
       "Do Not Call                                       0.00\n",
       "Converted                                         0.00\n",
       "TotalVisits                                       1.48\n",
       "Total Time Spent on Website                       0.00\n",
       "Page Views Per Visit                              1.48\n",
       "Last Activity                                     1.11\n",
       "Country                                          26.63\n",
       "Specialization                                   36.58\n",
       "How did you hear about X Education               78.46\n",
       "What is your current occupation                  29.11\n",
       "What matters most to you in choosing a course    29.32\n",
       "Search                                            0.00\n",
       "Magazine                                          0.00\n",
       "Newspaper Article                                 0.00\n",
       "X Education Forums                                0.00\n",
       "Newspaper                                         0.00\n",
       "Digital Advertisement                             0.00\n",
       "Through Recommendations                           0.00\n",
       "Receive More Updates About Our Courses            0.00\n",
       "Tags                                             36.29\n",
       "Lead Quality                                     51.59\n",
       "Update me on Supply Chain Content                 0.00\n",
       "Get updates on DM Content                         0.00\n",
       "Lead Profile                                     74.19\n",
       "City                                             39.71\n",
       "Asymmetrique Activity Index                      45.65\n",
       "Asymmetrique Profile Index                       45.65\n",
       "Asymmetrique Activity Score                      45.65\n",
       "Asymmetrique Profile Score                       45.65\n",
       "I agree to pay the amount through cheque          0.00\n",
       "A free copy of Mastering The Interview            0.00\n",
       "Last Notable Activity                             0.00\n",
       "dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp = round(df.isnull().sum() / len(df.index )* 100, 2)\n",
    "temp"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**As a contract, let's eliminate the columns that have more than threshold null values**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The column \"How did you hear about X Education\" is dropped\n",
      "The column \"Lead Quality\" is dropped\n",
      "The column \"Lead Profile\" is dropped\n",
      "The column \"Asymmetrique Activity Index\" is dropped\n",
      "The column \"Asymmetrique Profile Index\" is dropped\n",
      "The column \"Asymmetrique Activity Score\" is dropped\n",
      "The column \"Asymmetrique Profile Score\" is dropped\n"
     ]
    }
   ],
   "source": [
    "threshold = 45\n",
    "\n",
    "colm = df.columns\n",
    "\n",
    "for i,j in enumerate(colm):\n",
    "    if temp[i] >= threshold:\n",
    "        df.drop(j, axis=1, inplace=True)\n",
    "        print(f'The column \"{j}\" is dropped')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = \"2.4.1\"></a>\n",
    "### 2.4.1 Categorical Variables\n",
    "**Now, we should check categorical columns to analyze data well.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(close=None, block=None)>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Let's start with Country\n",
    "plt.figure(figsize=(25,10))\n",
    "ax1 = sns.countplot(x=df.Country, hue=df.Converted)\n",
    "ax1.set_xticklabels(ax1.get_xticklabels(), rotation=90)\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Wow!!!**\n",
    "\n",
    "It seems the the number of values for India are very bigh, let's check its frequency."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "India                   70.26\n",
       "NaN                     26.63\n",
       "United States            0.75\n",
       "United Arab Emirates     0.57\n",
       "Singapore                0.26\n",
       "Saudi Arabia             0.23\n",
       "United Kingdom           0.16\n",
       "Australia                0.14\n",
       "Qatar                    0.11\n",
       "Bahrain                  0.08\n",
       "Hong Kong                0.08\n",
       "France                   0.06\n",
       "Oman                     0.06\n",
       "unknown                  0.05\n",
       "Germany                  0.04\n",
       "Nigeria                  0.04\n",
       "South Africa             0.04\n",
       "Canada                   0.04\n",
       "Kuwait                   0.04\n",
       "Sweden                   0.03\n",
       "Belgium                  0.02\n",
       "China                    0.02\n",
       "Netherlands              0.02\n",
       "Bangladesh               0.02\n",
       "Ghana                    0.02\n",
       "Asia/Pacific Region      0.02\n",
       "Philippines              0.02\n",
       "Italy                    0.02\n",
       "Uganda                   0.02\n",
       "Sri Lanka                0.01\n",
       "Kenya                    0.01\n",
       "Denmark                  0.01\n",
       "Switzerland              0.01\n",
       "Liberia                  0.01\n",
       "Vietnam                  0.01\n",
       "Indonesia                0.01\n",
       "Russia                   0.01\n",
       "Tanzania                 0.01\n",
       "Malaysia                 0.01\n",
       "Name: Country, dtype: float64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(100*( df['Country'].value_counts(dropna=False) / len(df.index)),2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*A strategy can be to suppose the data are about India and drop this column.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "colms_to_drop = ['Country']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*let's check Cities*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "NaN                            3669\n",
       "Mumbai                         3222\n",
       "Thane & Outskirts               752\n",
       "Other Cities                    686\n",
       "Other Cities of Maharashtra     457\n",
       "Other Metro Cities              380\n",
       "Tier II Cities                   74\n",
       "Name: City, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['City'].value_counts(dropna=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mumbai                         6891\n",
       "Thane & Outskirts               752\n",
       "Other Cities                    686\n",
       "Other Cities of Maharashtra     457\n",
       "Other Metro Cities              380\n",
       "Tier II Cities                   74\n",
       "Name: City, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Replace Null values with Mumbai\n",
    "df['City'] = df['City'].replace(np.nan, 'Mumbai')\n",
    "df['City'].value_counts(dropna=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,5))\n",
    "ax1 = sns.countplot(x = df['City'], hue = df.Converted)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Now that we checked Country and City, In the following we are checking Specialization column**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "NaN                                  3380\n",
       "Finance Management                    976\n",
       "Human Resource Management             848\n",
       "Marketing Management                  838\n",
       "Operations Management                 503\n",
       "Business Administration               403\n",
       "IT Projects Management                366\n",
       "Supply Chain Management               349\n",
       "Banking, Investment And Insurance     338\n",
       "Media and Advertising                 203\n",
       "Travel and Tourism                    203\n",
       "International Business                178\n",
       "Healthcare Management                 159\n",
       "Hospitality Management                114\n",
       "E-COMMERCE                            112\n",
       "Retail Management                     100\n",
       "Rural and Agribusiness                 73\n",
       "E-Business                             57\n",
       "Services Excellence                    40\n",
       "Name: Specialization, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Specialization'].value_counts(dropna=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "_There are a lot of Null values in this column and it maybe says there was no value in the list to choose or maybe It's because of students. so let's replace them with 'Not Specified'_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA4EAAAHmCAYAAADNxIsHAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAB6sElEQVR4nO3debytc93/8dfbQYhjiCRDJBFyjjFKJQ0iaVKIiO40qDTcGu9fg7obaJJGJVMyNMhQhDKExDkcMyV0RxkzRabj/fvje61z1tln7bX3Ye99Xdde7+fjcR57rWvt4WNZa13X5/v9fD9f2SYiIiIiIiIGw0J1BxARERERERETJ0lgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEABm3JFDSqpLOknS1pKsk7Vsd/6ykWyTNqv5t1/Uzn5B0vaTrJG3TdfzV1bHrJX18vGKOiIiIiIiY7DRe+wRKWglYyfYlkpYCZgKvB94C/Nv2V4d8/7rAMcBmwDOBM4HnVg//GXglcDNwMbCL7auH+9vLL7+8V1999TH974mIiIiIiGiLmTNn3ml7hV6PLTxef9T2P4F/Vrfvl3QNsHKfH3kdcKzth4EbJV1PSQgBrrd9A4CkY6vvHTYJXH311ZkxY8YY/FdERERERES0j6S/DffYhKwJlLQ6sCHwp+rQ+yRdLunHkpatjq0M/L3rx26ujg13PCIiIiIiIhbQuCeBkpYEfgF80PZ9wPeANYHplJnCr43R39lb0gxJM+64446x+JURERERERGTzrgmgZIWoSSAR9v+JYDt22zPtv048EPmlnzeAqza9eOrVMeGOz4P24fY3sT2Jius0LP0NSIiIiIiYuCN25pASQIOBa6x/fWu4ytV6wUB3gBcWd0+CfippK9TGsOsBVwECFhL0hqU5G9n4K3jFXdERERERLTfo48+ys0338xDDz1UdyjjarHFFmOVVVZhkUUWGfXPjFsSCLwIeBtwhaRZ1bFPArtImg4YuAl4F4DtqyQdT2n48hiwj+3ZAJLeB/wWmAL82PZV4xh3RERERES03M0338xSSy3F6quvTpmfmnxsc9ddd3HzzTezxhprjPrnxrM76HmUWbyhftPnZ/4X+N8ex3/T7+ciIiIiIiK6PfTQQ5M6AQSQxNOe9jQWtCfKhHQHjYiIiIiImGiTOQHseCL/jUkCIyIiIiJiINx6663svPPOrLnmmmy88cZst912/PnPf57wOA4//HD+8Y9/LNDP3HTTTay//vpj8veTBEZERERExKRnmze84Q1stdVW/PWvf2XmzJl86Utf4rbbbpvQOGbPnv2EksCxlCQwIiIiIiImvbPOOotFFlmEd7/73XOOTZs2jS233JL99tuP9ddfn+c///kcd9xxAJx99tlstdVW7Ljjjqyzzjrsuuuu2Oa0007jzW9+85zfcfbZZ7P99tsDcPrpp7PFFluw0UYb8eY3v5l///vfAKy++up87GMfY6ONNuKYY45hxowZ7LrrrkyfPp3//Oc/zJw5k5e+9KVsvPHGbLPNNvzzn2UzhZkzZzJt2jSmTZvGd77znTF7LpIERkRERETEpHfllVey8cYbz3f8l7/8JbNmzeKyyy7jzDPPZL/99puThF166aV885vf5Oqrr+aGG27g/PPP5xWveAV/+tOfeOCBBwA47rjj2Hnnnbnzzjv5whe+wJlnnskll1zCJptswte/PmenPJ72tKdxySWXsNtuu7HJJptw9NFHM2vWLBZeeGHe//738/Of/5yZM2ey11578alPfQqAPffck4MPPpjLLrtsTJ+L8dwiolE23u/IJ/07Zh64+xhEEhERERERTXHeeeexyy67MGXKFFZccUVe+tKXcvHFFzN16lQ222wzVlllFQCmT5/OTTfdxJZbbsmrX/1qTj75ZHbccUd+/etfc8ABB3DOOedw9dVX86IXvQiARx55hC222GLO39lpp516/v3rrruOK6+8kle+8pVAKRddaaWVuOeee7jnnnt4yUteAsDb3vY2Tj311DH5bx6YJDAiIiIiIgbXeuutx89//vMF+pmnPOUpc25PmTKFxx57DICdd96Zb3/72yy33HJssskmLLXUUtjmla98Jcccc0zP3/XUpz6153HbrLfeevzxj3+c5/g999yzQLEuiJSDRkRERETEpLf11lvz8MMPc8ghh8w5dvnll7PMMstw3HHHMXv2bO644w7OPfdcNttss76/66UvfSmXXHIJP/zhD9l5550B2HzzzTn//PO5/vrrAXjggQeG7Ty61FJLcf/99wOw9tprc8cdd8xJAh999FGuuuoqlllmGZZZZhnOO+88AI4++ugn9wR0SRIYERERERGTniROOOEEzjzzTNZcc03WW289PvGJT/DWt76VDTbYgGnTprH11ltzwAEH8IxnPKPv75oyZQrbb789p5566pymMCussAKHH344u+yyCxtssAFbbLEF1157bc+ff/vb38673/1upk+fzuzZs/n5z3/Oxz72MaZNm8b06dO54IILADjssMPYZ599mD59OrbH7rkYy1/WFJtssolnzJgxz7GsCYyIiIiIGBzXXHMNz3ve8+oOY0L0+m+VNNP2Jr2+PzOBERERERERAyRJYERERERExABJEhgRERERETFAkgRGREREREQMkCSBERERERERAyRJYERERERExABJEhgREREREVGT0047jbXXXpvnPOc5fPnLX56Qv7nwhPyViIiIiIiIBhuLfcW7jWaP8dmzZ7PPPvtwxhlnsMoqq7Dpppuyww47sO66645pLENlJjAiIiIiIqIGF110Ec95znN49rOfzaKLLsrOO+/MiSeeOO5/N0lgREREREREDW655RZWXXXVOfdXWWUVbrnllnH/u0kCIyIiIiIiBkiSwIiIiIiIiBqsvPLK/P3vf59z/+abb2bllVce97+bJDAiIiIiIqIGm266KX/5y1+48cYbeeSRRzj22GPZYYcdxv3vpjtoREREREREDRZeeGG+/e1vs8022zB79mz22msv1ltvvfH/u+P+FyIiIiIiIhpuNFs6jIftttuO7bbbbkL/ZspBIyIiIiIiBkiSwIiIiIiIiAGSJDAiIiIiImKAJAmMiIiIiIgYIEkCIyIiIiIiBkiSwIiIiIiIiAGSJDAiIiIiIqIme+21F09/+tNZf/31J+xvZp/AiIiIiIgYeP+3//PH9Pet9ukrRvV9b3/723nf+97H7rtP3D6FmQmMiIiIiIioyUte8hKWW265Cf2bSQIjIiIiIiIGSJLAiIiIiIiIAZIkMCIiIiIiYoAkCYyIiIiIiBggSQIjIiIiIiJqsssuu7DFFltw3XXXscoqq3DooYeO+9/MFhERERERETHwRrulw1g75phjJvxvZiYwIiIiIiJigCQJjIiIiIiIGCBJAiMiIiIiIgZIksCIiIiIiJiUbNcdwrh7Iv+NSQIjIiIiImLSWWyxxbjrrrsmdSJom7vuuovFFltsgX5u3LqDSloVOBJYETBwiO2DJC0HHAesDtwEvMX23ZIEHARsBzwIvN32JdXv2gP4n+pXf8H2EeMVd0REREREtN8qq6zCzTffzB133FF3KONqscUWY5VVVlmgnxnPLSIeAz5i+xJJSwEzJZ0BvB34ne0vS/o48HHgY8C2wFrVvxcA3wNeUCWNnwE2oSSTMyWdZPvucYw9IiIiIiJabJFFFmGNNdaoO4xGGrdyUNv/7Mzk2b4fuAZYGXgd0JnJOwJ4fXX7dcCRLi4ElpG0ErANcIbtf1WJ3xnAq8cr7oiIiIiIiMlsQtYESlod2BD4E7Ci7X9WD91KKReFkiD+vevHbq6ODXc8IiIiIiIiFtC4J4GSlgR+AXzQ9n3dj7ms0hyTlZqS9pY0Q9KMyV73GxERERER8USNaxIoaRFKAni07V9Wh2+ryjypvt5eHb8FWLXrx1epjg13fB62D7G9ie1NVlhhhbH9D4mIiIiIiJgkxi0JrLp9HgpcY/vrXQ+dBOxR3d4DOLHr+O4qNgfurcpGfwu8StKykpYFXlUdi4iIiIiIiAU0nt1BXwS8DbhC0qzq2CeBLwPHS3oH8DfgLdVjv6FsD3E9ZYuIPQFs/0vS54GLq+/b3/a/xjHuiIiIiIiISWvckkDb5wEa5uGX9/h+A/sM87t+DPx47KKLiIiIiIgYTBPSHTQiIiIiIiKaIUlgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDJElgRERERETEAEkSGBERERERMUCSBEZERERERAyQJIEREREREREDZNySQEk/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\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Specialization'] = df['Specialization'].replace(np.nan, 'Not Specified')\n",
    "\n",
    "plt.figure(figsize = (15,5))\n",
    "ax = sns.countplot(df.Specialization, hue=df.Converted)\n",
    "ax.set_xticklabels(ax.get_xticklabels(), rotation = 90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We see that specialization with Management in them have higher number of leads as well as leads converted. So this is definitely a significant variable and should not be dropped.\n",
    "\n",
    "*Look!! There are similar trends between management fields, why don't we combine them as Management specialization? let's do it.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Specialization'] = df['Specialization'].replace(['Retail Management'        , \n",
    "                                                     'Finance Management'       ,\n",
    "                                                     'Marketing Management'     ,\n",
    "                                                     'Operations Management'    ,\n",
    "                                                     'Healthcare Management'    ,\n",
    "                                                     'Hospitality Management'   ,\n",
    "                                                     'IT Projects Management'   ,\n",
    "                                                     'Supply Chain Management'  ,\n",
    "                                                     'Human Resource Management',\n",
    "                                                  ], 'Management_Specializations')\n",
    "\n",
    "#let's plot the Specialization column with new changes\n",
    "\n",
    "plt.figure(figsize=(15,5))\n",
    "ax = sns.countplot(df.Specialization, hue=df.Converted)\n",
    "ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**it's Okay :), let's check next feature**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unemployed              5600\n",
       "NaN                     2690\n",
       "Working Professional     706\n",
       "Student                  210\n",
       "Other                     16\n",
       "Housewife                 10\n",
       "Businessman                8\n",
       "Name: What is your current occupation, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['What is your current occupation'].value_counts(dropna=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "we can replace Nan values with unemployed label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unemployed              8290\n",
      "Working Professional     706\n",
      "Student                  210\n",
      "Other                     16\n",
      "Housewife                 10\n",
      "Businessman                8\n",
      "Name: What is your current occupation, dtype: int64\n",
      "=================================================================\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA4EAAAE9CAYAAAC1PWfrAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAAsTElEQVR4nO3deZwdZZ3v8c+PBAwjgbBEZJIwiYAgARKTJhBAQGQTGVAnSBCBgHMZvLjNXLnAOFcU8SXiKCq4DDs4DKAIwihbQBbZSUISQhAJixJECGEZQLbE3/2jnk5Omu5Od+jTTXd93q/XeXXVU9tzzqmuU9/zPFUnMhNJkiRJUj2s1tcVkCRJkiT1HkOgJEmSJNWIIVCSJEmSasQQKEmSJEk1YgiUJEmSpBoxBEqSJElSjQzu6wo0wwYbbJCjR4/u62pIkiRJUp+YOXPmM5k5vL1pAzIEjh49mhkzZvR1NSRJkiSpT0TEHzqaZndQSZIkSaoRQ6AkSZIk1YghUJIkSZJqZEBeEyhJkiSp3t544w0WLlzIq6++2tdVaaohQ4YwcuRIVl999S4vYwiUJEmSNOAsXLiQoUOHMnr0aCKir6vTFJnJ4sWLWbhwIWPGjOnycnYHlSRJkjTgvPrqq6y//voDNgACRATrr79+t1s7DYGSJEmSBqSBHABbrcpzNARKkiRJqoU///nPTJ06lU022YSJEyeyzz778Pvf/77X63Heeefxpz/9qVvLPPbYY2y11VY9sn1DoCRJkqQBLzP52Mc+xq677srDDz/MzJkz+eY3v8lTTz3Vq/VYunTpKoXAnmQIlCRJkjTg3Xjjjay++uocddRRy8rGjRvHTjvtxDHHHMNWW23F1ltvzSWXXALATTfdxK677sqUKVPYYostOPjgg8lMrrnmGg444IBl67jpppvYd999AbjuuuuYPHkyEyZM4IADDuCll14CYPTo0Rx77LFMmDCBiy66iBkzZnDwwQczfvx4XnnlFWbOnMkuu+zCxIkT2WuvvXjyyScBmDlzJuPGjWPcuHH88Ic/7LHXwhAoSZIkacCbN28eEydOfFP5ZZddxuzZs5kzZw7XX389xxxzzLIQdu+99/K9732P+fPn88gjj3Dbbbex++67c9ddd/Hyyy8DcMkllzB16lSeeeYZTjrpJK6//npmzZpFS0sL3/3ud5dtZ/3112fWrFl86lOfoqWlhQsvvJDZs2czePBgPve5z3HppZcyc+ZMjjjiCL785S8DcPjhh3PaaacxZ86cHn0t/ImIBhOPuaCvq9BUM799aF9XQZIkSXpbufXWWznooIMYNGgQG264Ibvssgv33HMPa6+9NpMmTWLkyJEAjB8/nscee4yddtqJvffem//+7/9mypQp/PrXv+aUU07h5ptvZv78+ey4444AvP7660yePHnZdg488MB2t//ggw8yb9489thjD6DqLrrRRhvx/PPP8/zzz7PzzjsDcMghh3D11Vf3yHM2BEqSJEka8MaOHcull17arWXe8Y53LBseNGgQS5YsAWDq1KmcfvrprLfeerS0tDB06FAykz322IOLLrqo3XW9853vbLc8Mxk7dix33HHHCuXPP/98t+raHXYHlSRJkjTg7bbbbrz22mucccYZy8rmzp3LsGHDuOSSS1i6dCmLFi3illtuYdKkSZ2ua5dddmHWrFmceeaZTJ06FYDtt9+e2267jQULFgDw8ssvd3jn0aFDh/Liiy8CsPnmm7No0aJlIfCNN97g/vvvZ9iwYQwbNoxbb70VgAsvvPCtvQANDIGSJEmSBryI4PLLL+f6669nk002YezYsRx//PF88pOfZJtttmHcuHHstttunHLKKbz73e/udF2DBg1i33335eqrr152U5jhw4dz3nnncdBBB7HNNtswefJkfve737W7/LRp0zjqqKMYP348S5cu5dJLL+XYY49l3LhxjB8/nttvvx2Ac889l6OPPprx48eTmT33WvTkyt4uWlpacsaMGd1ezmsCJUmSpIHhgQce4H3ve19fV6NXtPdcI2JmZra0N78tgZIkSZJUI4ZASZIkSaoRQ6AkSZIk1YghUJIkSZJqxBAoSZIkSTViCJQkSZKkGjEESpIkSVIfueaaa9h8883ZdNNNOfnkk3tlm4N7ZSuSJEmS9DbW078Z3pXf6F66dClHH30006dPZ+TIkWy77bbst99+bLnllj1al7ZsCZQkSZKkPnD33Xez6aab8p73vIc11liDqVOncsUVVzR9u4ZASZIkSeoDTzzxBKNGjVo2PnLkSJ544ommb9cQKEmSJEk1YgiUJEmSpD4wYsQIHn/88WXjCxcuZMSIEU3friFQkiRJkvrAtttuy0MPPcSjjz7K66+/zsUXX8x+++3X9O16d1BJkiRJ6gOD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\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['What is your current occupation'] = df['What is your current occupation'].replace(np.nan, 'Unemployed')\n",
    "\n",
    "print(df['What is your current occupation'].value_counts(dropna = False))\n",
    "print('='*65)\n",
    "\n",
    "plt.figure(figsize=(15,5))\n",
    "ax = sns.countplot(df['What is your current occupation'], hue = df.Converted)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "it seems 'Working Professional' has high chance to join :)\n",
    "\n",
    "let's check the next feature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Better Career Prospects      6528\n",
       "NaN                          2709\n",
       "Flexibility & Convenience       2\n",
       "Other                           1\n",
       "Name: What matters most to you in choosing a course, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['What matters most to you in choosing a course'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Look! It seems null values are related to 'Better Career Prospects' and we should replace it with that.\n",
    "\n",
    "After replacing, this feature can't help us well, so it worth dropped."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Country', 'What matters most to you in choosing a course']\n"
     ]
    }
   ],
   "source": [
    "df['What matters most to you in choosing a course'] = df['What matters most to you in choosing a course'].replace(np.nan,\n",
    "                                                                                                'Better Career Prospects')\n",
    "colms_to_drop.append('What matters most to you in choosing a course')\n",
    "print(colms_to_drop)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "NaN                                                  3353\n",
       "Will revert after reading the email                  2072\n",
       "Ringing                                              1203\n",
       "Interested in other courses                           513\n",
       "Already a student                                     465\n",
       "Closed by Horizzon                                    358\n",
       "switched off                                          240\n",
       "Busy                                                  186\n",
       "Lost to EINS                                          175\n",
       "Not doing further education                           145\n",
       "Interested  in full time MBA                          117\n",
       "Graduation in progress                                111\n",
       "invalid number                                         83\n",
       "Diploma holder (Not Eligible)                          63\n",
       "wrong number given                                     47\n",
       "opp hangup                                             33\n",
       "number not provided                                    27\n",
       "in touch with EINS                                     12\n",
       "Lost to Others                                          7\n",
       "Want to take admission but has financial problems       6\n",
       "Still Thinking                                          6\n",
       "Interested in Next batch                                5\n",
       "In confusion whether part time or DLP                   5\n",
       "Lateral student                                         3\n",
       "University not recognized                               2\n",
       "Shall take in the next coming month                     2\n",
       "Recognition issue (DEC approval)                        1\n",
       "Name: Tags, dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Tags'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# It's not easy to decide the null is belong to which categories, so we replace it with \"Not Specified\".\n",
    "df['Tags'] = df['Tags'].replace(np.nan, 'Not Specified')\n",
    "\n",
    "plt.figure(figsize=(15,5))\n",
    "ax = sns.countplot(df.Tags , hue = df.Converted)\n",
    "ax.set_xticklabels(ax.get_xticklabels(), rotation = 90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**There are some tags with low frequency, let's combine them as other tags.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Tags'] = df['Tags'].replace(['In confusion whether part time or DLP', 'in touch with EINS','number not provided',\n",
    "                                 'opp hangup', 'Still Thinking', 'Lost to Others', 'Shall take in the next coming month',\n",
    "                                 'Lateral student', 'Interested in Next batch', 'Recognition issue (DEC approval)',\n",
    "                                 'Want to take admission but has financial problems', 'University not recognized',\n",
    "                                 'wrong number given','Diploma holder (Not Eligible)', 'invalid number' ], 'Other_Tags')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Lead Origin                                       0.00\n",
       "Lead Source                                       0.39\n",
       "Do Not Email                                      0.00\n",
       "Do Not Call                                       0.00\n",
       "Converted                                         0.00\n",
       "TotalVisits                                       1.48\n",
       "Total Time Spent on Website                       0.00\n",
       "Page Views Per Visit                              1.48\n",
       "Last Activity                                     1.11\n",
       "Country                                          26.63\n",
       "Specialization                                    0.00\n",
       "What is your current occupation                   0.00\n",
       "What matters most to you in choosing a course     0.00\n",
       "Search                                            0.00\n",
       "Magazine                                          0.00\n",
       "Newspaper Article                                 0.00\n",
       "X Education Forums                                0.00\n",
       "Newspaper                                         0.00\n",
       "Digital Advertisement                             0.00\n",
       "Through Recommendations                           0.00\n",
       "Receive More Updates About Our Courses            0.00\n",
       "Tags                                              0.00\n",
       "Update me on Supply Chain Content                 0.00\n",
       "Get updates on DM Content                         0.00\n",
       "City                                              0.00\n",
       "I agree to pay the amount through cheque          0.00\n",
       "A free copy of Mastering The Interview            0.00\n",
       "Last Notable Activity                             0.00\n",
       "dtype: float64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#let's check again percentage of missing values.\n",
    "\n",
    "round(100*(df.isnull().sum() / len(df.index)),2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Google               2868\n",
       "Direct Traffic       2543\n",
       "Olark Chat           1755\n",
       "Organic Search       1154\n",
       "Reference             534\n",
       "Welingak Website      142\n",
       "Referral Sites        125\n",
       "Facebook               55\n",
       "NaN                    36\n",
       "bing                    6\n",
       "google                  5\n",
       "Click2call              4\n",
       "Social Media            2\n",
       "Live Chat               2\n",
       "Press_Release           2\n",
       "NC_EDM                  1\n",
       "testone                 1\n",
       "welearnblog_Home        1\n",
       "youtubechannel          1\n",
       "blog                    1\n",
       "Pay per Click Ads       1\n",
       "WeLearn                 1\n",
       "Name: Lead Source, dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Lead Source'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are some wrong values that need to be correct. \n",
    "\n",
    "for exp; we have Google and google and they both refer to one, Or Social media is general than facebook.\n",
    "\n",
    "And finally let's combine low frequency values as other and also correct null value with other. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Lead Source'] = df['Lead Source'].replace('google', 'Google')\n",
    "df['Lead Source'] = df['Lead Source'].replace(np.nan, 'Others')\n",
    "df['Lead Source'] = df['Lead Source'].replace('Facebook', 'Social Media')\n",
    "df['Lead Source'] = df['Lead Source'].replace(['welearnblog_Home', 'youtubechannel', 'NC_EDM',\n",
    "                                               'testone', 'Pay per Click Ads', 'blog', 'WeLearn',\n",
    "                                               'Press_Release', 'Live Chat', 'Click2call', 'bing'], 'Others')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (15,5))\n",
    "ax = sns.countplot(df['Lead Source'], hue = df.Converted)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As an inference, we can say:\n",
    "\n",
    "lead Reference and Welingak Website are converted mostly and don't need to pay more focus on them. they should focus on Olark chat, Organic search, and Google to improve overall lead conversion."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Email Opened                    3437\n",
       "SMS Sent                        2745\n",
       "Olark Chat Conversation          973\n",
       "Page Visited on Website          640\n",
       "Converted to Lead                428\n",
       "Email Bounced                    326\n",
       "Email Link Clicked               267\n",
       "Form Submitted on Website        116\n",
       "NaN                              103\n",
       "Unreachable                       93\n",
       "Unsubscribed                      61\n",
       "Had a Phone Conversation          30\n",
       "Approached upfront                 9\n",
       "View in browser link Clicked       6\n",
       "Email Received                     2\n",
       "Email Marked Spam                  2\n",
       "Visited Booth in Tradeshow         1\n",
       "Resubscribed to emails             1\n",
       "Name: Last Activity, dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Last Activity'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#It seems we should combine low frequency and also replace Null value. \n",
    "df['Last Activity'] = df['Last Activity'].replace(np.nan, 'Others')\n",
    "df['Last Activity'] = df['Last Activity'].replace(['Visited Booth in Tradeshow', 'Resubscribed to emails',\n",
    "                                                   'Email Marked Spam', 'Email Received', 'View in browser link Clicked',\n",
    "                                                   'Approached upfront', 'Had a Phone Conversation', 'Unsubscribed',\n",
    "                                                   'Unreachable'], 'Others')\n",
    "\n",
    "#and fainally let's plot this feature.\n",
    "plt.figure(figsize=(15,5))\n",
    "ax = sns.countplot(df['Last Activity'], hue = df.Converted)\n",
    "ax.set_xticklabels(ax.get_xticklabels() , rotation = 90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Modified                        3407\n",
       "Email Opened                    2827\n",
       "SMS Sent                        2172\n",
       "Page Visited on Website          318\n",
       "Olark Chat Conversation          183\n",
       "Email Link Clicked               173\n",
       "Email Bounced                     60\n",
       "Unsubscribed                      47\n",
       "Unreachable                       32\n",
       "Had a Phone Conversation          14\n",
       "Email Marked Spam                  2\n",
       "Form Submitted on Website          1\n",
       "Email Received                     1\n",
       "Resubscribed to emails             1\n",
       "Approached upfront                 1\n",
       "View in browser link Clicked       1\n",
       "Name: Last Notable Activity, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Last Notable Activity'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Last Notable Activity'] = df['Last Notable Activity'].replace(['Form Submitted on Website', 'Resubscribed to emails',\n",
    "                                                                   'Approached upfront', 'Email Received',\n",
    "                                                                   'View in browser link Clicked', 'Email Marked Spam',\n",
    "                                                                   'Had a Phone Conversation', 'Unreachable', 'Unsubscribed',\n",
    "                                                                   'Email Bounced'], 'Other_Notable_activity')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.8/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (15,5))\n",
    "ax = sns.countplot(df['Last Notable Activity'], hue = df.Converted)\n",
    "ax.set_xticklabels(ax.get_xticklabels(), rotation = 90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**let's check missing values**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Lead Origin                                       0.00\n",
       "Lead Source                                       0.00\n",
       "Do Not Email                                      0.00\n",
       "Do Not Call                                       0.00\n",
       "Converted                                         0.00\n",
       "TotalVisits                                       1.48\n",
       "Total Time Spent on Website                       0.00\n",
       "Page Views Per Visit                              1.48\n",
       "Last Activity                                     0.00\n",
       "Country                                          26.63\n",
       "Specialization                                    0.00\n",
       "What is your current occupation                   0.00\n",
       "What matters most to you in choosing a course     0.00\n",
       "Search                                            0.00\n",
       "Magazine                                          0.00\n",
       "Newspaper Article                                 0.00\n",
       "X Education Forums                                0.00\n",
       "Newspaper                                         0.00\n",
       "Digital Advertisement                             0.00\n",
       "Through Recommendations                           0.00\n",
       "Receive More Updates About Our Courses            0.00\n",
       "Tags                                              0.00\n",
       "Update me on Supply Chain Content                 0.00\n",
       "Get updates on DM Content                         0.00\n",
       "City                                              0.00\n",
       "I agree to pay the amount through cheque          0.00\n",
       "A free copy of Mastering The Interview            0.00\n",
       "Last Notable Activity                             0.00\n",
       "dtype: float64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(100*(df.isnull().sum() / len(df.index)), 2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "the country feature has a high null value. since this feature is related to the city column, we can replace the null value with respect to the city feature. it seems there is a link between Mumbai in the City and null value in the Country. let's check and be sure."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Lead Origin                                      0.00\n",
       "Lead Source                                      0.00\n",
       "Do Not Email                                     0.00\n",
       "Do Not Call                                      0.00\n",
       "Converted                                        0.00\n",
       "TotalVisits                                      1.48\n",
       "Total Time Spent on Website                      0.00\n",
       "Page Views Per Visit                             1.48\n",
       "Last Activity                                    0.00\n",
       "Country                                          2.11\n",
       "Specialization                                   0.00\n",
       "What is your current occupation                  0.00\n",
       "What matters most to you in choosing a course    0.00\n",
       "Search                                           0.00\n",
       "Magazine                                         0.00\n",
       "Newspaper Article                                0.00\n",
       "X Education Forums                               0.00\n",
       "Newspaper                                        0.00\n",
       "Digital Advertisement                            0.00\n",
       "Through Recommendations                          0.00\n",
       "Receive More Updates About Our Courses           0.00\n",
       "Tags                                             0.00\n",
       "Update me on Supply Chain Content                0.00\n",
       "Get updates on DM Content                        0.00\n",
       "City                                             0.00\n",
       "I agree to pay the amount through cheque         0.00\n",
       "A free copy of Mastering The Interview           0.00\n",
       "Last Notable Activity                            0.00\n",
       "dtype: float64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[(df.City=='Mumbai'), \"Country\"] = df.loc[(df.City=='Mumbai'), \"Country\"].replace(np.nan, 'India')\n",
    "round(100*(df.isnull().sum() / len(df.index)), 2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**_Till yet,  we have dealt with missing values of categorical features and it's done. for numerical features, there are also two features that have been not dealt with yet. Since the percentage of these two features are roughly less than 2% we can drop corresponding rows._**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The shape of data is (8933, 28), after dropping null value\n",
      "====================================================================== \n",
      " Here we are checking null value again\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Lead Origin                                      0.0\n",
       "Lead Source                                      0.0\n",
       "Do Not Email                                     0.0\n",
       "Do Not Call                                      0.0\n",
       "Converted                                        0.0\n",
       "TotalVisits                                      0.0\n",
       "Total Time Spent on Website                      0.0\n",
       "Page Views Per Visit                             0.0\n",
       "Last Activity                                    0.0\n",
       "Country                                          0.0\n",
       "Specialization                                   0.0\n",
       "What is your current occupation                  0.0\n",
       "What matters most to you in choosing a course    0.0\n",
       "Search                                           0.0\n",
       "Magazine                                         0.0\n",
       "Newspaper Article                                0.0\n",
       "X Education Forums                               0.0\n",
       "Newspaper                                        0.0\n",
       "Digital Advertisement                            0.0\n",
       "Through Recommendations                          0.0\n",
       "Receive More Updates About Our Courses           0.0\n",
       "Tags                                             0.0\n",
       "Update me on Supply Chain Content                0.0\n",
       "Get updates on DM Content                        0.0\n",
       "City                                             0.0\n",
       "I agree to pay the amount through cheque         0.0\n",
       "A free copy of Mastering The Interview           0.0\n",
       "Last Notable Activity                            0.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df.dropna()\n",
    "print(f'The shape of data is {(df.shape)}, after dropping null value')\n",
    "print('='*70, '\\n', 'Here we are checking null value again')\n",
    "round(100*(df.isnull().sum() / len(df.index)), 2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So far we tried to deal with null values, to create the model we should check Imbalanced features and drop them too.\n",
    "\n",
    "before checking Imbalanced values, we'll figure out categorical features and then we'll check Imbalancing.\n",
    "\n",
    "let's go!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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gIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAAAAAAAICJCWYBAAAAAAAAJiaYBQAAAAAAAJiYYBYAAAAAAABgYoJZAAAAAAAAgIkJZgEAAAAAAAAmJpgFAAAAAAAAmJhgFgAAAAAAAGBiglkAAAAAAACAiQlmAQAAAAAAACYmmAUAAAAAAACYmGAWAAAAAAAAYGKCWQAA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\n",
      "text/plain": [
       "<Figure size 2304x3240 with 24 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#let's figure out and plot categorical variables.\n",
    "cat_features = df.select_dtypes(include = ['object']).columns\n",
    "fig,ax=plt.subplots(8, 3, figsize=(32, 45))\n",
    "fig.suptitle('Categorical Features Bar Plot', fontsize = 40)\n",
    "w = 0\n",
    "for i in range(ax.shape[0]):\n",
    "    for j in range(ax.shape[1]):\n",
    "        sns.countplot(ax = ax[i][j], x=df[cat_features[w]])\n",
    "        w +=1\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**By looking at charts can understand there are some imbalanced features that should be dropped.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "colms_to_drop.extend(['Do Not Call', 'Search', 'Magazine', 'Newspaper Article', 'X Education Forums',\n",
    "                      'Newspaper', 'Digital Advertisement','Through Recommendations',\n",
    "                      'Receive More Updates About Our Courses','Update me on Supply Chain Content',\n",
    "                      'Get updates on DM Content','I agree to pay the amount through cheque'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 8933 entries, 0 to 9239\n",
      "Data columns (total 14 columns):\n",
      " #   Column                                  Non-Null Count  Dtype  \n",
      "---  ------                                  --------------  -----  \n",
      " 0   Lead Origin                             8933 non-null   object \n",
      " 1   Lead Source                             8933 non-null   object \n",
      " 2   Do Not Email                            8933 non-null   object \n",
      " 3   Converted                               8933 non-null   int64  \n",
      " 4   TotalVisits                             8933 non-null   float64\n",
      " 5   Total Time Spent on Website             8933 non-null   int64  \n",
      " 6   Page Views Per Visit                    8933 non-null   float64\n",
      " 7   Last Activity                           8933 non-null   object \n",
      " 8   Specialization                          8933 non-null   object \n",
      " 9   What is your current occupation         8933 non-null   object \n",
      " 10  Tags                                    8933 non-null   object \n",
      " 11  City                                    8933 non-null   object \n",
      " 12  A free copy of Mastering The Interview  8933 non-null   object \n",
      " 13  Last Notable Activity                   8933 non-null   object \n",
      "dtypes: float64(2), int64(2), object(10)\n",
      "memory usage: 1.3+ MB\n"
     ]
    }
   ],
   "source": [
    "#let's drop colms_to_drop features and save it in Leads dataframe\n",
    "Leads  = df.drop(labels = colms_to_drop , axis= 1)\n",
    "Leads.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = \"2.4.2\"></a>\n",
    "### 2.4.2 Numerical Variables\n",
    "**So far we checked categorical features, right now we are going to analyze numerical variables.** let's go!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 37.33 percent of data with \"Converted Value = 1 \"\n"
     ]
    }
   ],
   "source": [
    "#let's check how much of data have \"converted\" label. \n",
    "print('There are %2.2f percent of data with \"Converted Value = 1 \"' \n",
    "      %((sum(Leads['Converted'] / len(Leads.index)))*100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Correlation:\n",
    "plt.figure(figsize = (14,8))\n",
    "sns.heatmap(Leads.corr(), annot= True, cmap=\"YlGnBu\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x360 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#checking numerical variables.\n",
    "numeric_var = ['TotalVisits', 'Total Time Spent on Website', 'Page Views Per Visit']\n",
    "fig,ax=plt.subplots(1, 3, figsize=(24, 5))\n",
    "fig.suptitle('Numerical Features Boxplot', fontsize = 20)\n",
    "for i in range(ax.shape[0]):\n",
    "    sns.boxplot(ax = ax[i], y = Leads[numeric_var[i]])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**It seems there are outliers in TotalVisits and Page Views Per Visit variables** let's check them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8933.000000</td>\n",
       "      <td>8933.000000</td>\n",
       "      <td>8933.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3.498377</td>\n",
       "      <td>488.013433</td>\n",
       "      <td>2.397142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.879254</td>\n",
       "      <td>545.752479</td>\n",
       "      <td>2.157053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>251.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>932.000000</td>\n",
       "      <td>3.330000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90%</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>1377.000000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95%</th>\n",
       "      <td>10.000000</td>\n",
       "      <td>1558.000000</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99%</th>\n",
       "      <td>17.000000</td>\n",
       "      <td>1839.680000</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>251.000000</td>\n",
       "      <td>2272.000000</td>\n",
       "      <td>55.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       TotalVisits  Total Time Spent on Website  Page Views Per Visit\n",
       "count  8933.000000                  8933.000000           8933.000000\n",
       "mean      3.498377                   488.013433              2.397142\n",
       "std       4.879254                   545.752479              2.157053\n",
       "min       0.000000                     0.000000              0.000000\n",
       "5%        0.000000                     0.000000              0.000000\n",
       "25%       1.000000                    18.000000              1.000000\n",
       "50%       3.000000                   251.000000              2.000000\n",
       "75%       5.000000                   932.000000              3.330000\n",
       "90%       7.000000                  1377.000000              5.000000\n",
       "95%      10.000000                  1558.000000              6.000000\n",
       "99%      17.000000                  1839.680000              9.000000\n",
       "max     251.000000                  2272.000000             55.000000"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(Leads[numeric_var]).describe(percentiles=[0.05,.25, .5, .75, .90, .95, .99])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1368x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Outlier Treatment: Remove top & bottom 1% of the Column Outlier values\n",
    "Q1 = Leads['TotalVisits'].quantile(0.01)\n",
    "Q3 = Leads['TotalVisits'].quantile(0.99)\n",
    "\n",
    "Leads = Leads[(Leads['TotalVisits']>=Q1)]\n",
    "Leads = Leads[(Leads['TotalVisits']<=Q3)]\n",
    "\n",
    "Q1 = Leads['Page Views Per Visit'].quantile(0.01)\n",
    "Q3 = Leads['Page Views Per Visit'].quantile(0.99)\n",
    "\n",
    "Leads = Leads[(Leads['Page Views Per Visit']>=Q1)]\n",
    "Leads = Leads[(Leads['Page Views Per Visit']<=Q3)]\n",
    "\n",
    "fig,ax=plt.subplots(1, 2, figsize=(19, 7))\n",
    "fig.suptitle('Numerical Features Boxplot After Outlier Treatment', fontsize = 20)\n",
    "\n",
    "sns.boxplot(ax = ax[0], y = Leads['TotalVisits'])\n",
    "sns.boxplot(ax = ax[1], y = Leads['Page Views Per Visit'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Let's check Numerical Variables vs Converted variabe**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x360 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 3, figsize = (24, 5))\n",
    "fig.suptitle('Numerical Variables vs Converted value Boxplot', fontsize = 25)\n",
    "for i in range(ax.shape[0]):\n",
    "    sns.boxplot(ax = ax[i], x = Leads.Converted, y = Leads[numeric_var[i]])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Inference**\n",
    "\n",
    "    1- In the TotalVisite variable; the median for both converted and unconverted are close\n",
    "    2- In the Total Time Spending Website; It seems leads can be converted if they spand more time on the website.\n",
    "    3- In the Page Views Per Visit; It's more like the Total Visits."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = \"2.4.3\"></a>\n",
    "### 2.4.3 Dummy Variables Creation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Lead Origin', 'Lead Source', 'Do Not Email', 'Last Activity',\n",
       "       'Specialization', 'What is your current occupation', 'Tags', 'City',\n",
       "       'A free copy of Mastering The Interview', 'Last Notable Activity'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Let's Update Categorical features\n",
    "cat_features = Leads.select_dtypes(include='object').columns\n",
    "cat_features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Do Not Email</th>\n",
       "      <th>A free copy of Mastering The Interview</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9235</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9236</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9237</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9238</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9239</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8784 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Do Not Email  A free copy of Mastering The Interview\n",
       "0                0                                       0\n",
       "1                0                                       0\n",
       "2                0                                       1\n",
       "3                0                                       0\n",
       "4                0                                       0\n",
       "...            ...                                     ...\n",
       "9235             1                                       0\n",
       "9236             0                                       1\n",
       "9237             1                                       1\n",
       "9238             0                                       0\n",
       "9239             0                                       1\n",
       "\n",
       "[8784 rows x 2 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#The variables that should be mapped\n",
    "VAR = ['Do Not Email', 'A free copy of Mastering The Interview']\n",
    "\n",
    "def binary_map(x):\n",
    "    return x.map({'Yes': 1, \"No\": 0})\n",
    "\n",
    "# Applying the function to the housing list\n",
    "Leads[VAR] = Leads[VAR].apply(binary_map)\n",
    "Leads[VAR]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Lead Origin</th>\n",
       "      <th>Lead Source</th>\n",
       "      <th>Do Not Email</th>\n",
       "      <th>Converted</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Last Activity</th>\n",
       "      <th>Specialization</th>\n",
       "      <th>What is your current occupation</th>\n",
       "      <th>...</th>\n",
       "      <th>A free copy of Mastering The Interview</th>\n",
       "      <th>Last Notable Activity</th>\n",
       "      <th>Lead Origin_Landing Page Submission</th>\n",
       "      <th>Lead Origin_Lead Add Form</th>\n",
       "      <th>Lead Origin_Lead Import</th>\n",
       "      <th>What is your current occupation_Housewife</th>\n",
       "      <th>What is your current occupation_Other</th>\n",
       "      <th>What is your current occupation_Student</th>\n",
       "      <th>What is your current occupation_Unemployed</th>\n",
       "      <th>What is your current occupation_Working Professional</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>API</td>\n",
       "      <td>Olark Chat</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Page Visited on Website</td>\n",
       "      <td>Not Specified</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>Modified</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>API</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>674</td>\n",
       "      <td>2.50</td>\n",
       "      <td>Email Opened</td>\n",
       "      <td>Not Specified</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>Email Opened</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1532</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Email Opened</td>\n",
       "      <td>Business Administration</td>\n",
       "      <td>Student</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>Email Opened</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>305</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Others</td>\n",
       "      <td>Media and Advertising</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>Modified</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Google</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1428</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Converted to Lead</td>\n",
       "      <td>Not Specified</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>Modified</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9235</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1845</td>\n",
       "      <td>2.67</td>\n",
       "      <td>Others</td>\n",
       "      <td>Management_Specializations</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>Other_Notable_activity</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9236</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>238</td>\n",
       "      <td>2.00</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Media and Advertising</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9237</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>199</td>\n",
       "      <td>2.00</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Business Administration</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9238</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Google</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>499</td>\n",
       "      <td>3.00</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Management_Specializations</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9239</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1279</td>\n",
       "      <td>3.00</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Management_Specializations</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>Modified</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8784 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Lead Origin     Lead Source  Do Not Email  Converted  \\\n",
       "0                         API      Olark Chat             0          0   \n",
       "1                         API  Organic Search             0          0   \n",
       "2     Landing Page Submission  Direct Traffic             0          1   \n",
       "3     Landing Page Submission  Direct Traffic             0          0   \n",
       "4     Landing Page Submission          Google             0          1   \n",
       "...                       ...             ...           ...        ...   \n",
       "9235  Landing Page Submission  Direct Traffic             1          1   \n",
       "9236  Landing Page Submission  Direct Traffic             0          0   \n",
       "9237  Landing Page Submission  Direct Traffic             1          0   \n",
       "9238  Landing Page Submission          Google             0          1   \n",
       "9239  Landing Page Submission  Direct Traffic             0          1   \n",
       "\n",
       "      TotalVisits  Total Time Spent on Website  Page Views Per Visit  \\\n",
       "0             0.0                            0                  0.00   \n",
       "1             5.0                          674                  2.50   \n",
       "2             2.0                         1532                  2.00   \n",
       "3             1.0                          305                  1.00   \n",
       "4             2.0                         1428                  1.00   \n",
       "...           ...                          ...                   ...   \n",
       "9235          8.0                         1845                  2.67   \n",
       "9236          2.0                          238                  2.00   \n",
       "9237          2.0                          199                  2.00   \n",
       "9238          3.0                          499                  3.00   \n",
       "9239          6.0                         1279                  3.00   \n",
       "\n",
       "                Last Activity              Specialization  \\\n",
       "0     Page Visited on Website               Not Specified   \n",
       "1                Email Opened               Not Specified   \n",
       "2                Email Opened     Business Administration   \n",
       "3                      Others       Media and Advertising   \n",
       "4           Converted to Lead               Not Specified   \n",
       "...                       ...                         ...   \n",
       "9235                   Others  Management_Specializations   \n",
       "9236                 SMS Sent       Media and Advertising   \n",
       "9237                 SMS Sent     Business Administration   \n",
       "9238                 SMS Sent  Management_Specializations   \n",
       "9239                 SMS Sent  Management_Specializations   \n",
       "\n",
       "     What is your current occupation  ...  \\\n",
       "0                         Unemployed  ...   \n",
       "1                         Unemployed  ...   \n",
       "2                            Student  ...   \n",
       "3                         Unemployed  ...   \n",
       "4                         Unemployed  ...   \n",
       "...                              ...  ...   \n",
       "9235                      Unemployed  ...   \n",
       "9236                      Unemployed  ...   \n",
       "9237                      Unemployed  ...   \n",
       "9238                      Unemployed  ...   \n",
       "9239                      Unemployed  ...   \n",
       "\n",
       "     A free copy of Mastering The Interview   Last Notable Activity  \\\n",
       "0                                         0                Modified   \n",
       "1                                         0            Email Opened   \n",
       "2                                         1            Email Opened   \n",
       "3                                         0                Modified   \n",
       "4                                         0                Modified   \n",
       "...                                     ...                     ...   \n",
       "9235                                      0  Other_Notable_activity   \n",
       "9236                                      1                SMS Sent   \n",
       "9237                                      1                SMS Sent   \n",
       "9238                                      0                SMS Sent   \n",
       "9239                                      1                Modified   \n",
       "\n",
       "      Lead Origin_Landing Page Submission Lead Origin_Lead Add Form  \\\n",
       "0                                       0                         0   \n",
       "1                                       0                         0   \n",
       "2                                       1                         0   \n",
       "3                                       1                         0   \n",
       "4                                       1                         0   \n",
       "...                                   ...                       ...   \n",
       "9235                                    1                         0   \n",
       "9236                                    1                         0   \n",
       "9237                                    1                         0   \n",
       "9238                                    1                         0   \n",
       "9239                                    1                         0   \n",
       "\n",
       "      Lead Origin_Lead Import  What is your current occupation_Housewife  \\\n",
       "0                           0                                          0   \n",
       "1                           0                                          0   \n",
       "2                           0                                          0   \n",
       "3                           0                                          0   \n",
       "4                           0                                          0   \n",
       "...                       ...                                        ...   \n",
       "9235                        0                                          0   \n",
       "9236                        0                                          0   \n",
       "9237                        0                                          0   \n",
       "9238                        0                                          0   \n",
       "9239                        0                                          0   \n",
       "\n",
       "      What is your current occupation_Other  \\\n",
       "0                                         0   \n",
       "1                                         0   \n",
       "2                                         0   \n",
       "3                                         0   \n",
       "4                                         0   \n",
       "...                                     ...   \n",
       "9235                                      0   \n",
       "9236                                      0   \n",
       "9237                                      0   \n",
       "9238                                      0   \n",
       "9239                                      0   \n",
       "\n",
       "      What is your current occupation_Student  \\\n",
       "0                                           0   \n",
       "1                                           0   \n",
       "2                                           1   \n",
       "3                                           0   \n",
       "4                                           0   \n",
       "...                                       ...   \n",
       "9235                                        0   \n",
       "9236                                        0   \n",
       "9237                                        0   \n",
       "9238                                        0   \n",
       "9239                                        0   \n",
       "\n",
       "      What is your current occupation_Unemployed  \\\n",
       "0                                              1   \n",
       "1                                              1   \n",
       "2                                              0   \n",
       "3                                              1   \n",
       "4                                              1   \n",
       "...                                          ...   \n",
       "9235                                           1   \n",
       "9236                                           1   \n",
       "9237                                           1   \n",
       "9238                                           1   \n",
       "9239                                           1   \n",
       "\n",
       "      What is your current occupation_Working Professional  \n",
       "0                                                     0     \n",
       "1                                                     0     \n",
       "2                                                     0     \n",
       "3                                                     0     \n",
       "4                                                     0     \n",
       "...                                                 ...     \n",
       "9235                                                  0     \n",
       "9236                                                  0     \n",
       "9237                                                  0     \n",
       "9238                                                  0     \n",
       "9239                                                  0     \n",
       "\n",
       "[8784 rows x 22 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get_dummies of 'Lead Origin' and 'What is your occupation' by dropping the first level and add to master data\n",
    "dummy = pd.get_dummies(Leads[['Lead Origin', 'What is your current occupation']], drop_first=True)\n",
    "Leads = pd.concat([Leads, dummy], axis=1)\n",
    "Leads"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Lead Origin</th>\n",
       "      <th>Lead Source</th>\n",
       "      <th>Do Not Email</th>\n",
       "      <th>Converted</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Last Activity</th>\n",
       "      <th>Specialization</th>\n",
       "      <th>What is your current occupation</th>\n",
       "      <th>...</th>\n",
       "      <th>Tags_Closed by Horizzon</th>\n",
       "      <th>Tags_Graduation in progress</th>\n",
       "      <th>Tags_Interested  in full time MBA</th>\n",
       "      <th>Tags_Interested in other courses</th>\n",
       "      <th>Tags_Lost to EINS</th>\n",
       "      <th>Tags_Not doing further education</th>\n",
       "      <th>Tags_Other_Tags</th>\n",
       "      <th>Tags_Ringing</th>\n",
       "      <th>Tags_Will revert after reading the email</th>\n",
       "      <th>Tags_switched off</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>API</td>\n",
       "      <td>Olark Chat</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Page Visited on Website</td>\n",
       "      <td>Not Specified</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>API</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>674</td>\n",
       "      <td>2.50</td>\n",
       "      <td>Email Opened</td>\n",
       "      <td>Not Specified</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1532</td>\n",
       "      <td>2.00</td>\n",
       "      <td>Email Opened</td>\n",
       "      <td>Business Administration</td>\n",
       "      <td>Student</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>305</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Others</td>\n",
       "      <td>Media and Advertising</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Google</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1428</td>\n",
       "      <td>1.00</td>\n",
       "      <td>Converted to Lead</td>\n",
       "      <td>Not Specified</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9235</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1845</td>\n",
       "      <td>2.67</td>\n",
       "      <td>Others</td>\n",
       "      <td>Management_Specializations</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9236</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>238</td>\n",
       "      <td>2.00</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Media and Advertising</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9237</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>199</td>\n",
       "      <td>2.00</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Business Administration</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9238</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Google</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>499</td>\n",
       "      <td>3.00</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Management_Specializations</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9239</th>\n",
       "      <td>Landing Page Submission</td>\n",
       "      <td>Direct Traffic</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1279</td>\n",
       "      <td>3.00</td>\n",
       "      <td>SMS Sent</td>\n",
       "      <td>Management_Specializations</td>\n",
       "      <td>Unemployed</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8784 rows Ã— 66 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Lead Origin     Lead Source  Do Not Email  Converted  \\\n",
       "0                         API      Olark Chat             0          0   \n",
       "1                         API  Organic Search             0          0   \n",
       "2     Landing Page Submission  Direct Traffic             0          1   \n",
       "3     Landing Page Submission  Direct Traffic             0          0   \n",
       "4     Landing Page Submission          Google             0          1   \n",
       "...                       ...             ...           ...        ...   \n",
       "9235  Landing Page Submission  Direct Traffic             1          1   \n",
       "9236  Landing Page Submission  Direct Traffic             0          0   \n",
       "9237  Landing Page Submission  Direct Traffic             1          0   \n",
       "9238  Landing Page Submission          Google             0          1   \n",
       "9239  Landing Page Submission  Direct Traffic             0          1   \n",
       "\n",
       "      TotalVisits  Total Time Spent on Website  Page Views Per Visit  \\\n",
       "0             0.0                            0                  0.00   \n",
       "1             5.0                          674                  2.50   \n",
       "2             2.0                         1532                  2.00   \n",
       "3             1.0                          305                  1.00   \n",
       "4             2.0                         1428                  1.00   \n",
       "...           ...                          ...                   ...   \n",
       "9235          8.0                         1845                  2.67   \n",
       "9236          2.0                          238                  2.00   \n",
       "9237          2.0                          199                  2.00   \n",
       "9238          3.0                          499                  3.00   \n",
       "9239          6.0                         1279                  3.00   \n",
       "\n",
       "                Last Activity              Specialization  \\\n",
       "0     Page Visited on Website               Not Specified   \n",
       "1                Email Opened               Not Specified   \n",
       "2                Email Opened     Business Administration   \n",
       "3                      Others       Media and Advertising   \n",
       "4           Converted to Lead               Not Specified   \n",
       "...                       ...                         ...   \n",
       "9235                   Others  Management_Specializations   \n",
       "9236                 SMS Sent       Media and Advertising   \n",
       "9237                 SMS Sent     Business Administration   \n",
       "9238                 SMS Sent  Management_Specializations   \n",
       "9239                 SMS Sent  Management_Specializations   \n",
       "\n",
       "     What is your current occupation  ... Tags_Closed by Horizzon  \\\n",
       "0                         Unemployed  ...                       0   \n",
       "1                         Unemployed  ...                       0   \n",
       "2                            Student  ...                       0   \n",
       "3                         Unemployed  ...                       0   \n",
       "4                         Unemployed  ...                       0   \n",
       "...                              ...  ...                     ...   \n",
       "9235                      Unemployed  ...                       0   \n",
       "9236                      Unemployed  ...                       0   \n",
       "9237                      Unemployed  ...                       0   \n",
       "9238                      Unemployed  ...                       0   \n",
       "9239                      Unemployed  ...                       0   \n",
       "\n",
       "     Tags_Graduation in progress  Tags_Interested  in full time MBA  \\\n",
       "0                              0                                  0   \n",
       "1                              0                                  0   \n",
       "2                              0                                  0   \n",
       "3                              0                                  0   \n",
       "4                              0                                  0   \n",
       "...                          ...                                ...   \n",
       "9235                           0                                  0   \n",
       "9236                           0                                  0   \n",
       "9237                           0                                  0   \n",
       "9238                           0                                  0   \n",
       "9239                           0                                  0   \n",
       "\n",
       "     Tags_Interested in other courses  Tags_Lost to EINS  \\\n",
       "0                                   1                  0   \n",
       "1                                   0                  0   \n",
       "2                                   0                  0   \n",
       "3                                   0                  0   \n",
       "4                                   0                  0   \n",
       "...                               ...                ...   \n",
       "9235                                0                  0   \n",
       "9236                                0                  0   \n",
       "9237                                0                  0   \n",
       "9238                                0                  0   \n",
       "9239                                0                  0   \n",
       "\n",
       "      Tags_Not doing further education  Tags_Other_Tags  Tags_Ringing  \\\n",
       "0                                    0                0             0   \n",
       "1                                    0                0             1   \n",
       "2                                    0                0             0   \n",
       "3                                    0                0             1   \n",
       "4                                    0                0             0   \n",
       "...                                ...              ...           ...   \n",
       "9235                                 0                0             0   \n",
       "9236                                 0                1             0   \n",
       "9237                                 0                1             0   \n",
       "9238                                 0                0             0   \n",
       "9239                                 0                0             0   \n",
       "\n",
       "      Tags_Will revert after reading the email  Tags_switched off  \n",
       "0                                            0                  0  \n",
       "1                                            0                  0  \n",
       "2                                            1                  0  \n",
       "3                                            0                  0  \n",
       "4                                            1                  0  \n",
       "...                                        ...                ...  \n",
       "9235                                         1                  0  \n",
       "9236                                         0                  0  \n",
       "9237                                         0                  0  \n",
       "9238                                         0                  0  \n",
       "9239                                         1                  0  \n",
       "\n",
       "[8784 rows x 66 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#get dummies; other features\n",
    "dummy_1 = pd.get_dummies(Leads['Specialization'], prefix='Specialization')\n",
    "dummy_2 = pd.get_dummies(Leads['Lead Source'], prefix = 'Lead Source')\n",
    "dummy_3 = pd.get_dummies(Leads['Last Activity'], prefix = 'Last Activity')\n",
    "dummy_4 = pd.get_dummies(Leads['Last Notable Activity'], prefix = 'Last Notable Activity')\n",
    "dummy_5 = pd.get_dummies(Leads['Tags'], prefix = 'Tags')\n",
    "\n",
    "#dropping some lables\n",
    "dummy_1 = dummy_1.drop(['Specialization_Not Specified'], axis = 1)\n",
    "dummy_2 = dummy_2.drop(['Lead Source_Others'], axis = 1)\n",
    "dummy_3 = dummy_3.drop(['Last Activity_Others'], axis = 1)\n",
    "dummy_4 = dummy_4.drop(['Last Notable Activity_Other_Notable_activity'], axis = 1)\n",
    "dummy_5 = dummy_5.drop(['Tags_Not Specified'], axis = 1)\n",
    "\n",
    "#adding to master data\n",
    "Leads = pd.concat([Leads, dummy_1, dummy_2, dummy_3, dummy_4, dummy_5], axis = 1)\n",
    "Leads"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Converted</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Lead Origin_Landing Page Submission</th>\n",
       "      <th>Lead Origin_Lead Add Form</th>\n",
       "      <th>Lead Origin_Lead Import</th>\n",
       "      <th>What is your current occupation_Housewife</th>\n",
       "      <th>What is your current occupation_Other</th>\n",
       "      <th>What is your current occupation_Student</th>\n",
       "      <th>...</th>\n",
       "      <th>Tags_Closed by Horizzon</th>\n",
       "      <th>Tags_Graduation in progress</th>\n",
       "      <th>Tags_Interested  in full time MBA</th>\n",
       "      <th>Tags_Interested in other courses</th>\n",
       "      <th>Tags_Lost to EINS</th>\n",
       "      <th>Tags_Not doing further education</th>\n",
       "      <th>Tags_Other_Tags</th>\n",
       "      <th>Tags_Ringing</th>\n",
       "      <th>Tags_Will revert after reading the email</th>\n",
       "      <th>Tags_switched off</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>674</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1532</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Converted  TotalVisits  Total Time Spent on Website  Page Views Per Visit  \\\n",
       "0          0          0.0                            0                   0.0   \n",
       "1          0          5.0                          674                   2.5   \n",
       "2          1          2.0                         1532                   2.0   \n",
       "\n",
       "   Lead Origin_Landing Page Submission  Lead Origin_Lead Add Form  \\\n",
       "0                                    0                          0   \n",
       "1                                    0                          0   \n",
       "2                                    1                          0   \n",
       "\n",
       "   Lead Origin_Lead Import  What is your current occupation_Housewife  \\\n",
       "0                        0                                          0   \n",
       "1                        0                                          0   \n",
       "2                        0                                          0   \n",
       "\n",
       "   What is your current occupation_Other  \\\n",
       "0                                      0   \n",
       "1                                      0   \n",
       "2                                      0   \n",
       "\n",
       "   What is your current occupation_Student  ...  Tags_Closed by Horizzon  \\\n",
       "0                                        0  ...                        0   \n",
       "1                                        0  ...                        0   \n",
       "2                                        1  ...                        0   \n",
       "\n",
       "   Tags_Graduation in progress  Tags_Interested  in full time MBA  \\\n",
       "0                            0                                  0   \n",
       "1                            0                                  0   \n",
       "2                            0                                  0   \n",
       "\n",
       "   Tags_Interested in other courses  Tags_Lost to EINS  \\\n",
       "0                                 1                  0   \n",
       "1                                 0                  0   \n",
       "2                                 0                  0   \n",
       "\n",
       "   Tags_Not doing further education  Tags_Other_Tags  Tags_Ringing  \\\n",
       "0                                 0                0             0   \n",
       "1                                 0                0             1   \n",
       "2                                 0                0             0   \n",
       "\n",
       "   Tags_Will revert after reading the email  Tags_switched off  \n",
       "0                                         0                  0  \n",
       "1                                         0                  0  \n",
       "2                                         1                  0  \n",
       "\n",
       "[3 rows x 56 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dropping master data categorical features \n",
    "Leads.drop(cat_features, axis = 1, inplace = True)\n",
    "Leads.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = '2.5' ></a>\n",
    "### 2.5 Feature Scaling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Lead Origin_Landing Page Submission</th>\n",
       "      <th>Lead Origin_Lead Add Form</th>\n",
       "      <th>Lead Origin_Lead Import</th>\n",
       "      <th>What is your current occupation_Housewife</th>\n",
       "      <th>What is your current occupation_Other</th>\n",
       "      <th>What is your current occupation_Student</th>\n",
       "      <th>What is your current occupation_Unemployed</th>\n",
       "      <th>...</th>\n",
       "      <th>Tags_Closed by Horizzon</th>\n",
       "      <th>Tags_Graduation in progress</th>\n",
       "      <th>Tags_Interested  in full time MBA</th>\n",
       "      <th>Tags_Interested in other courses</th>\n",
       "      <th>Tags_Lost to EINS</th>\n",
       "      <th>Tags_Not doing further education</th>\n",
       "      <th>Tags_Other_Tags</th>\n",
       "      <th>Tags_Ringing</th>\n",
       "      <th>Tags_Will revert after reading the email</th>\n",
       "      <th>Tags_switched off</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1.100354</td>\n",
       "      <td>-0.889188</td>\n",
       "      <td>-1.218669</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.623229</td>\n",
       "      <td>0.347838</td>\n",
       "      <td>0.105519</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.410921</td>\n",
       "      <td>1.922568</td>\n",
       "      <td>-0.159319</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.755637</td>\n",
       "      <td>-0.329406</td>\n",
       "      <td>-0.688994</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.410921</td>\n",
       "      <td>1.731692</td>\n",
       "      <td>-0.688994</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9235</th>\n",
       "      <td>1.657379</td>\n",
       "      <td>2.497033</td>\n",
       "      <td>0.195564</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9236</th>\n",
       "      <td>-0.410921</td>\n",
       "      <td>-0.452375</td>\n",
       "      <td>-0.159319</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9237</th>\n",
       "      <td>-0.410921</td>\n",
       "      <td>-0.523953</td>\n",
       "      <td>-0.159319</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9238</th>\n",
       "      <td>-0.066204</td>\n",
       "      <td>0.026652</td>\n",
       "      <td>0.370357</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9239</th>\n",
       "      <td>0.967946</td>\n",
       "      <td>1.458225</td>\n",
       "      <td>0.370357</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8784 rows Ã— 55 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      TotalVisits  Total Time Spent on Website  Page Views Per Visit  \\\n",
       "0       -1.100354                    -0.889188             -1.218669   \n",
       "1        0.623229                     0.347838              0.105519   \n",
       "2       -0.410921                     1.922568             -0.159319   \n",
       "3       -0.755637                    -0.329406             -0.688994   \n",
       "4       -0.410921                     1.731692             -0.688994   \n",
       "...           ...                          ...                   ...   \n",
       "9235     1.657379                     2.497033              0.195564   \n",
       "9236    -0.410921                    -0.452375             -0.159319   \n",
       "9237    -0.410921                    -0.523953             -0.159319   \n",
       "9238    -0.066204                     0.026652              0.370357   \n",
       "9239     0.967946                     1.458225              0.370357   \n",
       "\n",
       "      Lead Origin_Landing Page Submission  Lead Origin_Lead Add Form  \\\n",
       "0                                       0                          0   \n",
       "1                                       0                          0   \n",
       "2                                       1                          0   \n",
       "3                                       1                          0   \n",
       "4                                       1                          0   \n",
       "...                                   ...                        ...   \n",
       "9235                                    1                          0   \n",
       "9236                                    1                          0   \n",
       "9237                                    1                          0   \n",
       "9238                                    1                          0   \n",
       "9239                                    1                          0   \n",
       "\n",
       "      Lead Origin_Lead Import  What is your current occupation_Housewife  \\\n",
       "0                           0                                          0   \n",
       "1                           0                                          0   \n",
       "2                           0                                          0   \n",
       "3                           0                                          0   \n",
       "4                           0                                          0   \n",
       "...                       ...                                        ...   \n",
       "9235                        0                                          0   \n",
       "9236                        0                                          0   \n",
       "9237                        0                                          0   \n",
       "9238                        0                                          0   \n",
       "9239                        0                                          0   \n",
       "\n",
       "      What is your current occupation_Other  \\\n",
       "0                                         0   \n",
       "1                                         0   \n",
       "2                                         0   \n",
       "3                                         0   \n",
       "4                                         0   \n",
       "...                                     ...   \n",
       "9235                                      0   \n",
       "9236                                      0   \n",
       "9237                                      0   \n",
       "9238                                      0   \n",
       "9239                                      0   \n",
       "\n",
       "      What is your current occupation_Student  \\\n",
       "0                                           0   \n",
       "1                                           0   \n",
       "2                                           1   \n",
       "3                                           0   \n",
       "4                                           0   \n",
       "...                                       ...   \n",
       "9235                                        0   \n",
       "9236                                        0   \n",
       "9237                                        0   \n",
       "9238                                        0   \n",
       "9239                                        0   \n",
       "\n",
       "      What is your current occupation_Unemployed  ...  \\\n",
       "0                                              1  ...   \n",
       "1                                              1  ...   \n",
       "2                                              0  ...   \n",
       "3                                              1  ...   \n",
       "4                                              1  ...   \n",
       "...                                          ...  ...   \n",
       "9235                                           1  ...   \n",
       "9236                                           1  ...   \n",
       "9237                                           1  ...   \n",
       "9238                                           1  ...   \n",
       "9239                                           1  ...   \n",
       "\n",
       "      Tags_Closed by Horizzon  Tags_Graduation in progress  \\\n",
       "0                           0                            0   \n",
       "1                           0                            0   \n",
       "2                           0                            0   \n",
       "3                           0                            0   \n",
       "4                           0                            0   \n",
       "...                       ...                          ...   \n",
       "9235                        0                            0   \n",
       "9236                        0                            0   \n",
       "9237                        0                            0   \n",
       "9238                        0                            0   \n",
       "9239                        0                            0   \n",
       "\n",
       "      Tags_Interested  in full time MBA  Tags_Interested in other courses  \\\n",
       "0                                     0                                 1   \n",
       "1                                     0                                 0   \n",
       "2                                     0                                 0   \n",
       "3                                     0                                 0   \n",
       "4                                     0                                 0   \n",
       "...                                 ...                               ...   \n",
       "9235                                  0                                 0   \n",
       "9236                                  0                                 0   \n",
       "9237                                  0                                 0   \n",
       "9238                                  0                                 0   \n",
       "9239                                  0                                 0   \n",
       "\n",
       "      Tags_Lost to EINS  Tags_Not doing further education  Tags_Other_Tags  \\\n",
       "0                     0                                 0                0   \n",
       "1                     0                                 0                0   \n",
       "2                     0                                 0                0   \n",
       "3                     0                                 0                0   \n",
       "4                     0                                 0                0   \n",
       "...                 ...                               ...              ...   \n",
       "9235                  0                                 0                0   \n",
       "9236                  0                                 0                1   \n",
       "9237                  0                                 0                1   \n",
       "9238                  0                                 0                0   \n",
       "9239                  0                                 0                0   \n",
       "\n",
       "      Tags_Ringing  Tags_Will revert after reading the email  \\\n",
       "0                0                                         0   \n",
       "1                1                                         0   \n",
       "2                0                                         1   \n",
       "3                1                                         0   \n",
       "4                0                                         1   \n",
       "...            ...                                       ...   \n",
       "9235             0                                         1   \n",
       "9236             0                                         0   \n",
       "9237             0                                         0   \n",
       "9238             0                                         0   \n",
       "9239             0                                         1   \n",
       "\n",
       "      Tags_switched off  \n",
       "0                     0  \n",
       "1                     0  \n",
       "2                     0  \n",
       "3                     0  \n",
       "4                     0  \n",
       "...                 ...  \n",
       "9235                  0  \n",
       "9236                  0  \n",
       "9237                  0  \n",
       "9238                  0  \n",
       "9239                  0  \n",
       "\n",
       "[8784 rows x 55 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y = Leads.Converted\n",
    "X = Leads.drop('Converted', axis = 1)\n",
    "\n",
    "scaler = StandardScaler()\n",
    "X[numeric_var] = scaler.fit_transform(X[numeric_var])\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " The shape of X_train is:  (6148, 55) \n",
      " The shape of Y_train is:  (6148,) \n",
      " The shape of X_test is:   (2636, 55) \n",
      " The shape of Y_test is:   (2636,)\n"
     ]
    }
   ],
   "source": [
    "x = X.to_numpy()\n",
    "y = Y.to_numpy()\n",
    "\n",
    "X_train, X_test, Y_train, Y_test = train_test_split(x, y, test_size= 0.3, random_state=7)\n",
    "print(' The shape of X_train is: ', X_train.shape,'\\n',\n",
    "      'The shape of Y_train is: ', Y_train.shape,'\\n',\n",
    "      'The shape of X_test is:  ', X_test.shape,  '\\n',\n",
    "      'The shape of Y_test is:  ', Y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = \"2.6\" ></a>\n",
    "### 2.6 Logistic Regression, Manually (optional)\n",
    "\n",
    "In this part, I have tried to provide a simple Logistic Regression to show the details and mathematics behind this algorithm. Since working on two dimensional is more manageable than other dimensions, I utilized two first numerical features in order to implement Logistic Regression step by step. So this part is separate from our project and it's only provided to help machine learning starters to realize the mathematics and vectorization behind the algorithm. if you know the detail, skip this part."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " The shape of X_train is:  (2108, 2) \n",
      " The shape of Y_train is:  (2108,) \n",
      " The shape of X_test is:   (528, 2) \n",
      " The shape of Y_test is:   (528,)\n"
     ]
    }
   ],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(X_test, Y_test, test_size= 0.2, random_state=1)\n",
    "x_train, x_test, y_train, y_test = x_train[:,0:2], x_test[:,0:2], y_train, y_test\n",
    "print(' The shape of X_train is: ', x_train.shape,'\\n',\n",
    "      'The shape of Y_train is: ', y_train.shape,'\\n',\n",
    "      'The shape of X_test is:  ', x_test.shape,  '\\n',\n",
    "      'The shape of Y_test is:  ', y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = \"2.6.1\"></a>\n",
    "### 2.6.1 View the variables\n",
    "\n",
    "Ploting data help us to get more familiar with our dataset. So before starting to implement Logistic Regression, It will good to visualize the data if possible\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The firtst five values of x_train: [[-0.41092074 -0.16422477]\n",
      " [ 0.27851251 -0.59920276]\n",
      " [-1.100354   -0.88918808]\n",
      " [ 0.27851251 -0.63223906]\n",
      " [-0.06620412 -0.56616646]]\n"
     ]
    }
   ],
   "source": [
    "print('The firtst five values of x_train:', x_train[:5,:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot examples\n",
    "def Scat_Plot(X, Y):\n",
    "    poss = Y==1\n",
    "    neg  = Y==0\n",
    "    plt.plot(X[poss, 0], X[poss, 1], 'rx', label = 'y=1')\n",
    "    plt.plot(X[neg, 0], X[neg, 1], 'bo', label = 'y=0')\n",
    "\n",
    "Scat_Plot(x_train, y_train)\n",
    "plt.xlabel('Total Visit')\n",
    "plt.ylabel('Total time ')\n",
    "plt.legend(loc = 'lower right')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"2.6.2\"></a>\n",
    "### 2.6.2  Sigmoid function\n",
    "\n",
    "we know in logistic regression, the model is represented as\n",
    "<summary><font size=\"2\" color=\"darkblue\" ><b>\n",
    "$$ f_{\\mathbf{w},b}(x) = g(\\mathbf{w}\\cdot \\mathbf{x} + b)\\tag{1}$$\n",
    "</b></font></summary>\n",
    "\n",
    "where function $g$ is the `sigmoid function`. The sigmoid function is defined as:\n",
    "\n",
    "<summary><font size = \"2\" color='darkblue'><b>\n",
    "$$g(z) = \\frac{1}{1+e^{-z}}\\tag{2}$$\n",
    "</b></font></summary><b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sigmoid(z):\n",
    "    \"\"\"\n",
    "    Compute the sigmoid of z\n",
    "\n",
    "    Args:\n",
    "        z (ndarray): A scalar, numpy array of any size.\n",
    "\n",
    "    Returns:\n",
    "        g (ndarray): sigmoid(z), with the same shape as z\n",
    "         \n",
    "    \"\"\"\n",
    "    g = 1 / (1 + np.exp(-z))     #look function (2)\n",
    "\n",
    "    return g"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"2.6.3\"></a>\n",
    "### 2.6.3 Cost function for logistic regression\n",
    "\n",
    "Recall that for logistic regression, the cost function is of the form\n",
    "<summary><font size = \"2\" color = \"darkblue\"><b>\n",
    "$$ J(\\mathbf{w},b) = \\frac{1}{m}\\sum_{i=1}^{m} \\left[ loss(f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}), y^{(i)}) \\right] \\tag{3}$$\n",
    "</b></font></summary>\n",
    "where\n",
    "* m is the number of training examples in the dataset\n",
    "\n",
    "\n",
    "* $loss(f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}), y^{(i)})$ is the cost for a single data point, which is - <b></b>\n",
    "<summarya><font size = \"2\" color = 'darkblue'><b>\n",
    "    $$loss(f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}), y^{(i)}) = (-y^{(i)} \\log\\left(f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) \\tag{4}$$\n",
    "</b></font></summary><b>\n",
    "    \n",
    "*  $f_{\\mathbf{w},b}(\\mathbf{x}^{(i)})$ is the model's prediction, while $y^{(i)}$, which is the actual label\n",
    "\n",
    "*  $f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) = g(\\mathbf{w} \\cdot \\mathbf{x^{(i)}} + b)$ where function $g$ is the sigmoid function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Cost_Function(X, y, w, b):\n",
    "    \"\"\"\n",
    "    Computes the cost over all examples\n",
    "    Args:\n",
    "      X : (ndarray Shape (m,n)) data, m examples by n features\n",
    "      y : (array_like Shape (m,)) target value \n",
    "      w : (array_like Shape (n,)) Values of parameters of the model      \n",
    "      b : scalar Values of bias parameter of the model\n",
    "    Returns:\n",
    "      total_cost: (scalar)         cost \n",
    "    \"\"\"\n",
    "\n",
    "    m, n = X.shape\n",
    "\n",
    "    z = np.dot(X, w) + b                                                   #function (1)\n",
    "    g = sigmoid(z)\n",
    "    total_cost = 1/m * (-np.dot(y.T, np.log(g))-np.dot((1-y).T, np.log(1-g)))   #function(3)\n",
    "\n",
    "    return total_cost"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"2.6.4\"></a>\n",
    "### 2.6.4 Gradient for logistic regression\n",
    "\n",
    "Recall that the gradient descent algorithm is:\n",
    "<summary><font size = \"2\" color = \"darkblue\"><b>\n",
    "$$\\begin{align*}& \\text{repeat until convergence:} \\; \\lbrace \\newline \\; & b := b -  \\alpha \\frac{\\partial J(\\mathbf{w},b)}{\\partial b} \\newline       \\; & w_j := w_j -  \\alpha \\frac{\\partial J(\\mathbf{w},b)}{\\partial w_j} \\tag{5}  \\; & \\text{for j := 1..n}\\newline & \\rbrace\\end{align*}$$\n",
    "</b></font></summary>\n",
    "where, parameters $b$, $w_j$ are all updated simultaniously and\n",
    "<summary><font size = \"2\" color = \"darkblue\"><b>\n",
    "$$\\begin{align*}\\frac{\\partial J(\\mathbf{w},b)}{\\partial b} = \\frac{1}{m} \\sum\\limits_{i=1}^{m} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)} - \\mathbf{y}^{(i)})\\tag{6}\\newline\\; \\frac{\\partial J(\\mathbf{w},b)}{\\partial w_j} = \\frac{1}{m} \\sum\\limits_{i=1}^{m} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - \\mathbf{y}^{(i)})x_{j}^{i} \\tag{7} \\end{align*}$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "def LogReg_gradient(X, y, w, b): \n",
    "    \"\"\"\n",
    "    Computes the gradient for logistic regression \n",
    " \n",
    "    Args:\n",
    "      X : (ndarray Shape (m,n)) variable such as house size \n",
    "      y : (array_like Shape (m,1)) actual value \n",
    "      w : (array_like Shape (n,1)) values of parameters of the model      \n",
    "      b : (scalar)                 value of parameter of the model \n",
    "\n",
    "    Returns\n",
    "      dj_dw: (array_like Shape (n,1)) The gradient of the cost w.r.t. the parameters w. \n",
    "      dj_db: (scalar)                The gradient of the cost w.r.t. the parameter b. \n",
    "    \"\"\"\n",
    "    m, n = X.shape\n",
    "\n",
    "    z = np.dot(X, w) + b                        #function (1)\n",
    "    \n",
    "    g = sigmoid(z)                              #function (2)\n",
    "\n",
    "    dj_db = 1/m * np.sum((g-y), axis = 0)                 #function (6) for b \n",
    "    \n",
    "    dj_dw = (1/m * np.dot((g-y).T, X)).T        #function (6) for w\n",
    "    return dj_db, dj_dw"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"2.6.5\"></a>\n",
    "### 2.6.5 Learning parameters using gradient descent \n",
    "\n",
    "By using gradient descent, we will find the optimal parameters of a logistic regression model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "def gradient_descent(X, y, w_in, b_in, alpha, num_iters): \n",
    "    \"\"\"\n",
    "    Performs batch gradient descent to learn theta. Updates theta by taking \n",
    "    num_iters gradient steps with learning rate alpha\n",
    "    \n",
    "    Args:\n",
    "      X :    (array_like Shape (m, n)\n",
    "      y :    (array_like Shape (m,))\n",
    "      w_in : (array_like Shape (n,))  Initial values of parameters of the model\n",
    "      b_in : (scalar)                 Initial value of parameter of the model\n",
    "      alpha : (float)                 Learning rate\n",
    "      num_iters : (int)               number of iterations to run gradient descent\n",
    "      \n",
    "    Returns:\n",
    "      w : (array_like Shape (n,)) Updated values of parameters of the model after\n",
    "          running gradient descent\n",
    "      b : (scalar)                Updated value of parameter of the model after\n",
    "          running gradient descent\n",
    "    \"\"\"\n",
    "    \n",
    "    # number of training examples\n",
    "    m = len(X)\n",
    "    \n",
    "    # An array to store cost J and w's at each iteration primarily for graphing later\n",
    "    J_history = []\n",
    "    w_history = []\n",
    "    \n",
    "    for i in range(num_iters):\n",
    "\n",
    "        # Calculate the gradient and update the parameters\n",
    "        dj_db, dj_dw = LogReg_gradient(X, y, w_in, b_in)   \n",
    "\n",
    "        # Update Parameters using w, b, alpha and gradient\n",
    "        w_in = w_in - alpha * dj_dw               \n",
    "        b_in = b_in - alpha * dj_db              \n",
    "       \n",
    "        # Save cost J at each iteration\n",
    "        if i<100000:      # prevent resource exhaustion \n",
    "            cost =  Cost_Function(X, y, w_in, b_in)\n",
    "            J_history.append(cost)\n",
    "\n",
    "        # Print cost every at intervals 10 times or as many iterations if < 10\n",
    "        if i% math.ceil(num_iters/10) == 0 or i == (num_iters-1):\n",
    "            w_history.append(w_in)\n",
    "            print(f\"Iteration {i:4}: Cost {float(J_history[-1]):8.2f}   \")\n",
    "        \n",
    "    return w_in, b_in, J_history, w_history #return w and J,w history for graphing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now let's run the gradient descent algorithm above to learn the parameters for our dataset.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Iteration    0: Cost     0.69   \n",
      "Iteration 1000: Cost     0.65   \n",
      "Iteration 2000: Cost     0.63   \n",
      "Iteration 3000: Cost     0.61   \n",
      "Iteration 4000: Cost     0.60   \n",
      "Iteration 5000: Cost     0.60   \n",
      "Iteration 6000: Cost     0.59   \n",
      "Iteration 7000: Cost     0.59   \n",
      "Iteration 8000: Cost     0.59   \n",
      "Iteration 9000: Cost     0.59   \n",
      "Iteration 9999: Cost     0.59   \n"
     ]
    }
   ],
   "source": [
    "np.random.seed(1)\n",
    "initial_w = 0.01 * (np.random.rand(2).reshape(-1,1) - 0.5)\n",
    "initial_b = 0\n",
    "\n",
    "# Some gradient descent settings\n",
    "iterations = 10000\n",
    "alpha = 0.001\n",
    "\n",
    "w,b, J_history,_ = gradient_descent(x_train ,np.reshape(y_train, (-1,1)), initial_w, initial_b, \n",
    "                                   alpha, iterations)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_decision_boundary(w, b, X, y):\n",
    "    # Credit to dibgerge on Github for this plotting code\n",
    "     \n",
    "    Scat_Plot(X, y)\n",
    "    \n",
    "    if X.shape[1] <= 2:\n",
    "        plot_x = np.array([min(X[:, 0]), max(X[:, 0])])\n",
    "        plot_y = (-1. / w[1]) * (w[0] * plot_x + b)\n",
    "        plt.plot(plot_x, plot_y, c=\"k\")\n",
    "        \n",
    "    else:\n",
    "        u = np.linspace(-2, 5, 50)\n",
    "        v = np.linspace(-1, 4, 50)\n",
    "        \n",
    "        z = np.zeros((len(u), len(v)))\n",
    "\n",
    "        # Evaluate z = theta*x over the grid\n",
    "        for i in range(len(u)):\n",
    "            for j in range(len(v)):\n",
    "                z[i,j] = sigmoid(np.dot(map_feature(u[i], v[j]), w) + b)\n",
    "        \n",
    "        # important to transpose z before calling contour       \n",
    "        z = z.T\n",
    "        \n",
    "        # Plot z = 0.5\n",
    "        plt.contour(u,v,z, levels = [0.5], colors=\"g\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_decision_boundary(w, b, x_train, y_train)\n",
    "plt.xlabel('Total Visit')\n",
    "plt.ylabel('Total time ')\n",
    "plt.legend(loc = 'lower right')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "it seems we have classified data very badly, let's evalute our model to see more"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"2.6.7\"></a>\n",
    "### 2.6.7 Evaluating logistic regression\n",
    "\n",
    "We can evaluate the quality of the parameters we have found by seeing how well the learned model predicts on our training set. \n",
    "\n",
    "we will implement the `predict` function below to do this.\n",
    "\n",
    "- First we need to compute the prediction from the model $f(x^{(i)}) = g(w \\cdot x^{(i)})$ for every example \n",
    "    - We've implemented this before in the parts above\n",
    "- We interpret the output of the model ($f(x^{(i)})$) as the probability that $y^{(i)}=1$ given $x^{(i)}$ and parameterized by $w$.\n",
    "- Therefore, to get a final prediction ($y^{(i)}=0$ or $y^{(i)}=1$) from the logistic regression model, we can use the following heuristic -\n",
    "\n",
    "  if $f(x^{(i)}) >= 0.5$, predict $y^{(i)}=1$\n",
    "  \n",
    "  if $f(x^{(i)}) < 0.5$, predict $y^{(i)}=0$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "def predict(X, w, b): \n",
    "    \"\"\"\n",
    "    Predict whether the label is 0 or 1 using learned logistic\n",
    "    regression parameters w\n",
    "    \n",
    "    Args:\n",
    "    X : (ndarray Shape (m, n))\n",
    "    w : (array_like Shape (n,))      Parameters of the model\n",
    "    b : (scalar, float)              Parameter of the model\n",
    "\n",
    "    Returns:\n",
    "    p: (ndarray (m,1))\n",
    "        The predictions for X using a threshold at 0.5\n",
    "    \"\"\"\n",
    "    # number of training examples\n",
    "    m, n = X.shape   \n",
    "    p = np.zeros(m)\n",
    "    z_p = np.dot(X, w) + b\n",
    "    g_p = sigmoid(z_p)\n",
    "    p = g_p >= 0.5\n",
    "    return p"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now let's use this to compute the accuracy on the training set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Accuracy: 56.310468\n"
     ]
    }
   ],
   "source": [
    "#Compute accuracy on our training set\n",
    "p = predict(x_train, w,b)\n",
    "print('Train Accuracy: %f'%(np.mean(p == y_train) * 100))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "High bias has been accrued. so how can we deal with high bias: it seems this conflict is not about data, maybe we need to check more complexity in data, so let's check the polynomial feature."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name=\"2.6.8\"></a>\n",
    "### 2.6.8 Feature mapping\n",
    "\n",
    "One way to fit the data better is to create more features from each data point. In the provided function `map_feature`, we will map the features into all polynomial terms of $x_1$ and $x_2$ up to the Nth power.\n",
    "\n",
    "$$\\mathrm{map\\_feature}(x) = \n",
    "\\left[\\begin{array}{c}\n",
    "x_1\\\\\n",
    "x_2\\\\\n",
    "x_1^2\\\\\n",
    "x_1 x_2\\\\\n",
    "x_2^2\\\\\n",
    "x_1^3\\\\\n",
    "\\vdots\\\\\n",
    "x_1 x_2^{N-1}\\\\\n",
    "x_2^{N}\\end{array}\\right]$$\n",
    "\n",
    "As a result of this mapping, our vector of two features has been transformed into a ($\\frac {(N+1)(N+2)}{2}-1$)-dimensional vector. \n",
    "\n",
    "- A logistic regression classifier trained on this higher-dimension feature vector will have a more complex decision boundary and will be nonlinear when drawn in our 2-dimensional plot. \n",
    "- We have provided the `map_feature` function in the following."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "def map_feature(X1, X2, deg = 3):\n",
    "    \"\"\"\n",
    "    Feature mapping function to polynomial features    \n",
    "    \"\"\"\n",
    "    X1 = np.atleast_1d(X1)\n",
    "    X2 = np.atleast_1d(X2)\n",
    "    degree = deg\n",
    "    out = []\n",
    "    for i in range(1, degree+1):\n",
    "        for j in range(i + 1):\n",
    "            out.append((X1**(i-j) * (X2**j)))\n",
    "    return np.stack(out, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original shape of data: (2108, 2)\n",
      "Shape after feature mapping: (2108, 9)\n"
     ]
    }
   ],
   "source": [
    "print(\"Original shape of data:\", x_train.shape)\n",
    "\n",
    "mapped_x_train =  map_feature(x_train[:, 0], x_train[:, 1], deg=3)\n",
    "print(\"Shape after feature mapping:\", mapped_x_train.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Iteration    0: Cost     0.68   \n",
      "Iteration 1000: Cost     0.54   \n",
      "Iteration 2000: Cost     0.54   \n",
      "Iteration 3000: Cost     0.54   \n",
      "Iteration 4000: Cost     0.54   \n",
      "Iteration 5000: Cost     0.54   \n",
      "Iteration 6000: Cost     0.54   \n",
      "Iteration 7000: Cost     0.54   \n",
      "Iteration 8000: Cost     0.54   \n",
      "Iteration 9000: Cost     0.54   \n",
      "Iteration 9999: Cost     0.54   \n"
     ]
    }
   ],
   "source": [
    "np.random.seed(1)\n",
    "N = len(mapped_x_train[1])\n",
    "initial_w = 0.01 * (np.random.rand(N).reshape(-1,1) - 0.5)\n",
    "initial_b = 0\n",
    "\n",
    "# Some gradient descent settings\n",
    "iterations = 10000\n",
    "alpha = 0.1\n",
    "\n",
    "w,b, J_history,_ = gradient_descent(mapped_x_train,np.reshape(y_train, (-1,1)), initial_w, initial_b, \n",
    "                                   alpha, iterations)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot examples\n",
    "plot_decision_boundary(w, b, mapped_x_train, y_train)\n",
    "\n",
    "# Set the x_axis and y-axis label\n",
    "plt.xlabel('Total Visit')\n",
    "plt.ylabel('Total time ')\n",
    "plt.legend(loc = 'lower right')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "it seems better but we know is not enough. anyway, since we intended to check how logistic regression works in detail, we wouldn't like to deal with this problem. we know our model has not been fitted to the data, and maybe we should check more features, maybe there is a link (dependency) between data or somethings else, how ever we wouldn't like to talk about it in this part. As a more detail of logistic regression we've provided regularization in the following to see how it works. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**we should use Regularization if we encountered high variance. Since we don't need it here I just have provided its formulation and its code.**\n",
    "### 2.7 Regularized Logistic Regression(Optional)\n",
    "<details>\n",
    "    <summary><font size = '2' color = 'darkgreen'><b>CLICK HERE.</b>\n",
    "        </font></summary>\n",
    "    \n",
    "<a name = '2.7'></a>\n",
    "### 2.7 Regularized Logistic Regression, Manually\n",
    "\n",
    "In this part, you will show how to implement regularized logistic regression.\n",
    "\n",
    "<a name='2.7.1'></a>\n",
    "### 2.7.1 Cost function for regularized logistic regression\n",
    "\n",
    "Recall that for regularized logistic regression, the cost function is of the form <summary><font size = '2' color = 'darkblue'><b>\n",
    "$$J(\\mathbf{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\\tag{8}$$\n",
    "</b></font></summary>\n",
    "Compare this to the cost function without regularization, which is of the form <summary><font size='2' color = 'darkblue'><b>\n",
    "$$ J(\\mathbf{w}.b) = \\frac{1}{m}\\sum_{i=0}^{m-1} \\left[ (-y^{(i)} \\log\\left(f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right)\\right]\\tag{3,4}$$\n",
    "</b></font></summary>\n",
    "The difference is the regularization term, which is<font size='2' color = 'darkblue'><b> $$\\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\\tag{9}$$ </b></font>\n",
    "Note that the $b$ parameter is not regularized.\n",
    "<details>\n",
    "  <summary><font size=\"2\" color=\"darkgreen\"><b>CLICK HERE TO SEE CODE</b></font></summary>\n",
    "    \n",
    "    \n",
    "* Here's how we can structure the overall implementation for this function\n",
    "    ```python \n",
    "       def compute_cost_reg(X, y, w, b, lambda_ = 1):\n",
    "            Computes the cost over all examples\n",
    "            \"\"\"Args:\n",
    "              X : (array_like Shape (m,n)) data, m examples by n features\n",
    "              y : (array_like Shape (m,)) target value \n",
    "              w : (array_like Shape (n,)) Values of parameters of the model      \n",
    "              b : (array_like Shape (n,)) Values of bias parameter of the model\n",
    "              lambda_ : (scalar, float)    Controls amount of regularization\n",
    "            Returns:\n",
    "              total_cost: (scalar)         cost \"\"\"\n",
    "            m, n = X.shape\n",
    "            \n",
    "            #Calls the compute_cost function that we implemented above\n",
    "            cost_without_reg = compute_cost(X, y, w, b) \n",
    "            \n",
    "            reg_cost = 0.\n",
    "            \n",
    "            reg_cost = np.dot(w,w)\n",
    "            \n",
    "            # Add the regularization cost to get the total cost\n",
    "            total_cost = cost_without_reg + (lambda_/(2 * m)) * reg_cost\n",
    "            \n",
    "            return total_cost\n",
    "\n",
    "    ```\n",
    "\n",
    "     </b></font></summary></details>  \n",
    "\n",
    "<a name=\"3.7.2\"></a>\n",
    "### 2.7.2 Gradient for regularized logistic regression\n",
    "\n",
    "The gradient of the regularized cost function has two components. The first, $\\frac{\\partial J(\\mathbf{w},b)}{\\partial b}$ is a scalar, the other is a vector with the same shape as the parameters $\\mathbf{w}$, where the $j^\\mathrm{th}$ element is defined as follows:\n",
    "<summary><font size = '2' color = 'darkblue'><b>\n",
    "$$\\frac{\\partial J(\\mathbf{w},b)}{\\partial b} = \\frac{1}{m}  \\sum_{i=1}^{m} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)}) \\tag{6}$$\n",
    "\n",
    "$$\\frac{\\partial J(\\mathbf{w},b)}{\\partial w_j} = \\left( \\frac{1}{m}  \\sum_{i=0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)}) x_j^{(i)} \\right) + \\frac{\\lambda}{m} w_j  \\quad\\, \\mbox{for $j=1...(n)$}\\tag{10}$$\n",
    "</b></font></summary>\n",
    "\n",
    "Compare this to the gradient of the cost function without regularization, which is of the form \n",
    "<summary><font size = '2' color = 'darkblue'><b>\n",
    "$$\n",
    "\\frac{\\partial J(\\mathbf{w},b)}{\\partial b}  = \\frac{1}{m} \\sum\\limits_{i = 1}^{m} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - \\mathbf{y}^{(i)}) \\tag{6}\n",
    "$$\n",
    "$$\n",
    "\\frac{\\partial J(\\mathbf{w},b)}{\\partial w_j}  = \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - \\mathbf{y}^{(i)})x_{j}^{(i)} \\tag{7}\n",
    "$$\n",
    "</b></font></summary>\n",
    "\n",
    "As we can see,$\\frac{\\partial J(\\mathbf{w},b)}{\\partial b}$ is the same, the difference is the following term in $\\frac{\\partial J(\\mathbf{w},b)}{\\partial w}$, which is $$\\frac{\\lambda}{m} w_j  \\quad\\, \\mbox{for $j=1...(n)$}$$ \n",
    "\n",
    "<details><summary><font size = '2' color = 'darkgreen'><b>Gradient Code</b></font></summary>\n",
    "    \n",
    "* Here's how we can structure the overall implementation for this function\n",
    "    ```Python\n",
    "    def compute_gradient_reg(X, y, w, b, lambda_ = 1): \n",
    "    \"\"\"\n",
    "    Computes the gradient for linear regression \n",
    " \n",
    "    Args:\n",
    "      X : (ndarray Shape (m,n))   variable such as house size \n",
    "      y : (ndarray Shape (m,))    actual value \n",
    "      w : (ndarray Shape (n,))    values of parameters of the model      \n",
    "      b : (scalar)                value of parameter of the model  \n",
    "      lambda_ : (scalar,float)    regularization constant\n",
    "    Returns\n",
    "      dj_db: (scalar)             The gradient of the cost w.r.t. the parameter b. \n",
    "      dj_dw: (ndarray Shape (n,)) The gradient of the cost w.r.t. the parameters w. \n",
    "\n",
    "    \"\"\"\n",
    "    m, n = X.shape\n",
    "    \n",
    "    dj_db, dj_dw = compute_gradient(X, y, w, b)\n",
    "    \n",
    "    dj_dw = dj_dw + lambda_/m * w                 \n",
    "        \n",
    "    return dj_db, dj_dw\n",
    "    ```\n",
    "\n",
    "</details>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Let's back to our project.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = '2.8'></a>\n",
    "### 2.8 Logistic Regression Model\n",
    "There are a lot of features in the data and it will be a good job to check them. we're going to rank features and select features by recursively considering smaller sets of features. so we are utilizing [RFE (Recursive Feature Elimination)](https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.RFE.html) and also we are employing [Statsmodels](https://conference.scipy.org/proceedings/scipy2010/pdfs/seabold.pdf) in order to use some statistical analysis.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:70: FutureWarning: Pass n_features_to_select=20 as keyword args. From version 1.0 (renaming of 0.25) passing these as positional arguments will result in an error\n",
      "  warnings.warn(f\"Pass {args_msg} as keyword args. From version \"\n",
      "/usr/local/lib/python3.8/dist-packages/sklearn/linear_model/_logistic.py:763: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "RFE(estimator=LogisticRegression(), n_features_to_select=20)"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Logreg = LogisticRegression()\n",
    "rfe = RFE(Logreg, 20)\n",
    "rfe.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>TotalVisits</td>\n",
       "      <td>False</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Total Time Spent on Website</td>\n",
       "      <td>False</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Page Views Per Visit</td>\n",
       "      <td>False</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Lead Origin_Landing Page Submission</td>\n",
       "      <td>False</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Lead Origin_Lead Add Form</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Lead Origin_Lead Import</td>\n",
       "      <td>False</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>What is your current occupation_Housewife</td>\n",
       "      <td>False</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>What is your current occupation_Other</td>\n",
       "      <td>False</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>What is your current occupation_Student</td>\n",
       "      <td>False</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>What is your current occupation_Unemployed</td>\n",
       "      <td>False</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            0      1   2\n",
       "0                                 TotalVisits  False  27\n",
       "1                 Total Time Spent on Website  False   3\n",
       "2                        Page Views Per Visit  False  26\n",
       "3         Lead Origin_Landing Page Submission  False  10\n",
       "4                   Lead Origin_Lead Add Form   True   1\n",
       "5                     Lead Origin_Lead Import  False  32\n",
       "6   What is your current occupation_Housewife  False  31\n",
       "7       What is your current occupation_Other  False  24\n",
       "8     What is your current occupation_Student  False  14\n",
       "9  What is your current occupation_Unemployed  False  15"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Features selected by RFE\n",
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size= 0.3, random_state=7)\n",
    "feature_selected = pd.DataFrame(list(zip(X_train.columns, rfe.support_, rfe.ranking_)))\n",
    "feature_selected.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name='2.8.1'></a>\n",
    "### 2.8.1 Building Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Generalized Linear Model Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>Converted</td>    <th>  No. Observations:  </th>  <td>  6148</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                  <td>GLM</td>       <th>  Df Residuals:      </th>  <td>  6127</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model Family:</th>        <td>Binomial</td>     <th>  Df Model:          </th>  <td>    20</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Link Function:</th>         <td>Logit</td>      <th>  Scale:             </th> <td>  1.0000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>                <td>IRLS</td>       <th>  Log-Likelihood:    </th> <td> -1285.5</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>            <td>Mon, 10 Oct 2022</td> <th>  Deviance:          </th> <td>  2571.0</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                <td>01:36:06</td>     <th>  Pearson chi2:      </th> <td>1.13e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Iterations:</th>          <td>8</td>        <th>  Pseudo R-squ. (CS):</th>  <td>0.5949</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                        <td></td>                           <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>                                         <td>   -1.3380</td> <td>    0.104</td> <td>  -12.869</td> <td> 0.000</td> <td>   -1.542</td> <td>   -1.134</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Lead Origin_Lead Add Form</th>                     <td>    1.2060</td> <td>    0.486</td> <td>    2.483</td> <td> 0.013</td> <td>    0.254</td> <td>    2.158</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Specialization_Travel and Tourism</th>             <td>   -1.3045</td> <td>    0.433</td> <td>   -3.014</td> <td> 0.003</td> <td>   -2.153</td> <td>   -0.456</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Lead Source_Direct Traffic</th>                    <td>   -0.4031</td> <td>    0.140</td> <td>   -2.871</td> <td> 0.004</td> <td>   -0.678</td> <td>   -0.128</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Lead Source_Google</th>                            <td>    0.0797</td> <td>    0.123</td> <td>    0.650</td> <td> 0.516</td> <td>   -0.161</td> <td>    0.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Lead Source_Referral Sites</th>                    <td>   -0.3076</td> <td>    0.440</td> <td>   -0.699</td> <td> 0.484</td> <td>   -1.170</td> <td>    0.555</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Lead Source_Welingak Website</th>                  <td>    3.4561</td> <td>    1.129</td> <td>    3.061</td> <td> 0.002</td> <td>    1.243</td> <td>    5.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Last Activity_SMS Sent</th>                        <td>    1.3814</td> <td>    0.221</td> <td>    6.255</td> <td> 0.000</td> <td>    0.949</td> <td>    1.814</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Last Notable Activity_Modified</th>                <td>   -1.3652</td> <td>    0.151</td> <td>   -9.014</td> <td> 0.000</td> <td>   -1.662</td> <td>   -1.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Last Notable Activity_Olark Chat Conversation</th> <td>   -1.3445</td> <td>    0.404</td> <td>   -3.324</td> <td> 0.001</td> <td>   -2.137</td> <td>   -0.552</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Last Notable Activity_SMS Sent</th>                <td>    1.1506</td> <td>    0.256</td> <td>    4.493</td> <td> 0.000</td> <td>    0.649</td> <td>    1.653</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Already a student</th>                        <td>   -3.0618</td> <td>    0.714</td> <td>   -4.286</td> <td> 0.000</td> <td>   -4.462</td> <td>   -1.662</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Closed by Horizzon</th>                       <td>    6.4976</td> <td>    0.727</td> <td>    8.941</td> <td> 0.000</td> <td>    5.073</td> <td>    7.922</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Interested  in full time MBA</th>             <td>   -1.6755</td> <td>    0.724</td> <td>   -2.313</td> <td> 0.021</td> <td>   -3.095</td> <td>   -0.256</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Interested in other courses</th>              <td>   -2.1611</td> <td>    0.468</td> <td>   -4.621</td> <td> 0.000</td> <td>   -3.078</td> <td>   -1.245</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Lost to EINS</th>                             <td>    6.4112</td> <td>    0.726</td> <td>    8.836</td> <td> 0.000</td> <td>    4.989</td> <td>    7.833</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Not doing further education</th>              <td>   -2.6918</td> <td>    1.018</td> <td>   -2.644</td> <td> 0.008</td> <td>   -4.687</td> <td>   -0.696</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Other_Tags</th>                               <td>   -1.9496</td> <td>    0.299</td> <td>   -6.517</td> <td> 0.000</td> <td>   -2.536</td> <td>   -1.363</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Ringing</th>                                  <td>   -4.1150</td> <td>    0.288</td> <td>  -14.298</td> <td> 0.000</td> <td>   -4.679</td> <td>   -3.551</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Will revert after reading the email</th>      <td>    4.9662</td> <td>    0.202</td> <td>   24.612</td> <td> 0.000</td> <td>    4.571</td> <td>    5.362</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_switched off</th>                             <td>   -4.5617</td> <td>    0.725</td> <td>   -6.296</td> <td> 0.000</td> <td>   -5.982</td> <td>   -3.142</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                 Generalized Linear Model Regression Results                  \n",
       "==============================================================================\n",
       "Dep. Variable:              Converted   No. Observations:                 6148\n",
       "Model:                            GLM   Df Residuals:                     6127\n",
       "Model Family:                Binomial   Df Model:                           20\n",
       "Link Function:                  Logit   Scale:                          1.0000\n",
       "Method:                          IRLS   Log-Likelihood:                -1285.5\n",
       "Date:                Mon, 10 Oct 2022   Deviance:                       2571.0\n",
       "Time:                        01:36:06   Pearson chi2:                 1.13e+04\n",
       "No. Iterations:                     8   Pseudo R-squ. (CS):             0.5949\n",
       "Covariance Type:            nonrobust                                         \n",
       "=================================================================================================================\n",
       "                                                    coef    std err          z      P>|z|      [0.025      0.975]\n",
       "-----------------------------------------------------------------------------------------------------------------\n",
       "const                                            -1.3380      0.104    -12.869      0.000      -1.542      -1.134\n",
       "Lead Origin_Lead Add Form                         1.2060      0.486      2.483      0.013       0.254       2.158\n",
       "Specialization_Travel and Tourism                -1.3045      0.433     -3.014      0.003      -2.153      -0.456\n",
       "Lead Source_Direct Traffic                       -0.4031      0.140     -2.871      0.004      -0.678      -0.128\n",
       "Lead Source_Google                                0.0797      0.123      0.650      0.516      -0.161       0.320\n",
       "Lead Source_Referral Sites                       -0.3076      0.440     -0.699      0.484      -1.170       0.555\n",
       "Lead Source_Welingak Website                      3.4561      1.129      3.061      0.002       1.243       5.669\n",
       "Last Activity_SMS Sent                            1.3814      0.221      6.255      0.000       0.949       1.814\n",
       "Last Notable Activity_Modified                   -1.3652      0.151     -9.014      0.000      -1.662      -1.068\n",
       "Last Notable Activity_Olark Chat Conversation    -1.3445      0.404     -3.324      0.001      -2.137      -0.552\n",
       "Last Notable Activity_SMS Sent                    1.1506      0.256      4.493      0.000       0.649       1.653\n",
       "Tags_Already a student                           -3.0618      0.714     -4.286      0.000      -4.462      -1.662\n",
       "Tags_Closed by Horizzon                           6.4976      0.727      8.941      0.000       5.073       7.922\n",
       "Tags_Interested  in full time MBA                -1.6755      0.724     -2.313      0.021      -3.095      -0.256\n",
       "Tags_Interested in other courses                 -2.1611      0.468     -4.621      0.000      -3.078      -1.245\n",
       "Tags_Lost to EINS                                 6.4112      0.726      8.836      0.000       4.989       7.833\n",
       "Tags_Not doing further education                 -2.6918      1.018     -2.644      0.008      -4.687      -0.696\n",
       "Tags_Other_Tags                                  -1.9496      0.299     -6.517      0.000      -2.536      -1.363\n",
       "Tags_Ringing                                     -4.1150      0.288    -14.298      0.000      -4.679      -3.551\n",
       "Tags_Will revert after reading the email          4.9662      0.202     24.612      0.000       4.571       5.362\n",
       "Tags_switched off                                -4.5617      0.725     -6.296      0.000      -5.982      -3.142\n",
       "=================================================================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#let's figure out selected features to buil models.\n",
    "features = X_train.columns[rfe.support_]\n",
    "\n",
    "#by utilizing Generalized Linear Model (GLM) we check p-value for features and our model.\n",
    "#we can reject features if its p-value is high. \n",
    "X_train_sm = sm.add_constant(X_train[features])\n",
    "logmodel = sm.GLM(Y_train, X_train_sm, family= sm.families.Binomial())\n",
    "res = logmodel.fit()\n",
    "res.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Lead Origin_Lead Add Form', 'Specialization_Travel and Tourism',\n",
       "       'Lead Source_Direct Traffic', 'Lead Source_Welingak Website',\n",
       "       'Last Activity_SMS Sent', 'Last Notable Activity_Modified',\n",
       "       'Last Notable Activity_Olark Chat Conversation',\n",
       "       'Last Notable Activity_SMS Sent', 'Tags_Already a student',\n",
       "       'Tags_Closed by Horizzon', 'Tags_Interested  in full time MBA',\n",
       "       'Tags_Interested in other courses', 'Tags_Lost to EINS',\n",
       "       'Tags_Not doing further education', 'Tags_Other_Tags', 'Tags_Ringing',\n",
       "       'Tags_Will revert after reading the email', 'Tags_switched off'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#p-value for Lead Source_Google is high, so we reject it.\n",
    "to_drop = ['Lead Source_Google', 'Lead Source_Referral Sites']\n",
    "features = features.drop(to_drop)\n",
    "features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Generalized Linear Model Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>Converted</td>    <th>  No. Observations:  </th>  <td>  6148</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                  <td>GLM</td>       <th>  Df Residuals:      </th>  <td>  6129</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model Family:</th>        <td>Binomial</td>     <th>  Df Model:          </th>  <td>    18</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Link Function:</th>         <td>Logit</td>      <th>  Scale:             </th> <td>  1.0000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>                <td>IRLS</td>       <th>  Log-Likelihood:    </th> <td> -1286.1</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>            <td>Mon, 10 Oct 2022</td> <th>  Deviance:          </th> <td>  2572.1</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                <td>01:36:10</td>     <th>  Pearson chi2:      </th> <td>1.14e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Iterations:</th>          <td>8</td>        <th>  Pseudo R-squ. (CS):</th>  <td>0.5948</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                        <td></td>                           <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>                                         <td>   -1.3093</td> <td>    0.084</td> <td>  -15.647</td> <td> 0.000</td> <td>   -1.473</td> <td>   -1.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Lead Origin_Lead Add Form</th>                     <td>    1.1686</td> <td>    0.481</td> <td>    2.429</td> <td> 0.015</td> <td>    0.226</td> <td>    2.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Specialization_Travel and Tourism</th>             <td>   -1.3175</td> <td>    0.432</td> <td>   -3.050</td> <td> 0.002</td> <td>   -2.164</td> <td>   -0.471</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Lead Source_Direct Traffic</th>                    <td>   -0.4370</td> <td>    0.125</td> <td>   -3.483</td> <td> 0.000</td> <td>   -0.683</td> <td>   -0.191</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Lead Source_Welingak Website</th>                  <td>    3.4617</td> <td>    1.129</td> <td>    3.066</td> <td> 0.002</td> <td>    1.248</td> <td>    5.675</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Last Activity_SMS Sent</th>                        <td>    1.3996</td> <td>    0.220</td> <td>    6.372</td> <td> 0.000</td> <td>    0.969</td> <td>    1.830</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Last Notable Activity_Modified</th>                <td>   -1.3668</td> <td>    0.151</td> <td>   -9.052</td> <td> 0.000</td> <td>   -1.663</td> <td>   -1.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Last Notable Activity_Olark Chat Conversation</th> <td>   -1.3586</td> <td>    0.402</td> <td>   -3.381</td> <td> 0.001</td> <td>   -2.146</td> <td>   -0.571</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Last Notable Activity_SMS Sent</th>                <td>    1.1402</td> <td>    0.255</td> <td>    4.471</td> <td> 0.000</td> <td>    0.640</td> <td>    1.640</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Already a student</th>                        <td>   -3.0604</td> <td>    0.714</td> <td>   -4.284</td> <td> 0.000</td> <td>   -4.460</td> <td>   -1.660</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Closed by Horizzon</th>                       <td>    6.5101</td> <td>    0.727</td> <td>    8.960</td> <td> 0.000</td> <td>    5.086</td> <td>    7.934</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Interested  in full time MBA</th>             <td>   -1.6522</td> <td>    0.724</td> <td>   -2.283</td> <td> 0.022</td> <td>   -3.071</td> <td>   -0.234</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Interested in other courses</th>              <td>   -2.1758</td> <td>    0.467</td> <td>   -4.656</td> <td> 0.000</td> <td>   -3.092</td> <td>   -1.260</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Lost to EINS</th>                             <td>    6.4221</td> <td>    0.725</td> <td>    8.852</td> <td> 0.000</td> <td>    5.000</td> <td>    7.844</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Not doing further education</th>              <td>   -2.6855</td> <td>    1.018</td> <td>   -2.637</td> <td> 0.008</td> <td>   -4.681</td> <td>   -0.690</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Other_Tags</th>                               <td>   -1.9499</td> <td>    0.299</td> <td>   -6.521</td> <td> 0.000</td> <td>   -2.536</td> <td>   -1.364</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Ringing</th>                                  <td>   -4.1106</td> <td>    0.288</td> <td>  -14.283</td> <td> 0.000</td> <td>   -4.675</td> <td>   -3.547</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_Will revert after reading the email</th>      <td>    4.9742</td> <td>    0.201</td> <td>   24.750</td> <td> 0.000</td> <td>    4.580</td> <td>    5.368</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Tags_switched off</th>                             <td>   -4.5567</td> <td>    0.725</td> <td>   -6.289</td> <td> 0.000</td> <td>   -5.977</td> <td>   -3.137</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                 Generalized Linear Model Regression Results                  \n",
       "==============================================================================\n",
       "Dep. Variable:              Converted   No. Observations:                 6148\n",
       "Model:                            GLM   Df Residuals:                     6129\n",
       "Model Family:                Binomial   Df Model:                           18\n",
       "Link Function:                  Logit   Scale:                          1.0000\n",
       "Method:                          IRLS   Log-Likelihood:                -1286.1\n",
       "Date:                Mon, 10 Oct 2022   Deviance:                       2572.1\n",
       "Time:                        01:36:10   Pearson chi2:                 1.14e+04\n",
       "No. Iterations:                     8   Pseudo R-squ. (CS):             0.5948\n",
       "Covariance Type:            nonrobust                                         \n",
       "=================================================================================================================\n",
       "                                                    coef    std err          z      P>|z|      [0.025      0.975]\n",
       "-----------------------------------------------------------------------------------------------------------------\n",
       "const                                            -1.3093      0.084    -15.647      0.000      -1.473      -1.145\n",
       "Lead Origin_Lead Add Form                         1.1686      0.481      2.429      0.015       0.226       2.112\n",
       "Specialization_Travel and Tourism                -1.3175      0.432     -3.050      0.002      -2.164      -0.471\n",
       "Lead Source_Direct Traffic                       -0.4370      0.125     -3.483      0.000      -0.683      -0.191\n",
       "Lead Source_Welingak Website                      3.4617      1.129      3.066      0.002       1.248       5.675\n",
       "Last Activity_SMS Sent                            1.3996      0.220      6.372      0.000       0.969       1.830\n",
       "Last Notable Activity_Modified                   -1.3668      0.151     -9.052      0.000      -1.663      -1.071\n",
       "Last Notable Activity_Olark Chat Conversation    -1.3586      0.402     -3.381      0.001      -2.146      -0.571\n",
       "Last Notable Activity_SMS Sent                    1.1402      0.255      4.471      0.000       0.640       1.640\n",
       "Tags_Already a student                           -3.0604      0.714     -4.284      0.000      -4.460      -1.660\n",
       "Tags_Closed by Horizzon                           6.5101      0.727      8.960      0.000       5.086       7.934\n",
       "Tags_Interested  in full time MBA                -1.6522      0.724     -2.283      0.022      -3.071      -0.234\n",
       "Tags_Interested in other courses                 -2.1758      0.467     -4.656      0.000      -3.092      -1.260\n",
       "Tags_Lost to EINS                                 6.4221      0.725      8.852      0.000       5.000       7.844\n",
       "Tags_Not doing further education                 -2.6855      1.018     -2.637      0.008      -4.681      -0.690\n",
       "Tags_Other_Tags                                  -1.9499      0.299     -6.521      0.000      -2.536      -1.364\n",
       "Tags_Ringing                                     -4.1106      0.288    -14.283      0.000      -4.675      -3.547\n",
       "Tags_Will revert after reading the email          4.9742      0.201     24.750      0.000       4.580       5.368\n",
       "Tags_switched off                                -4.5567      0.725     -6.289      0.000      -5.977      -3.137\n",
       "=================================================================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train_sm = sm.add_constant(X_train[features])\n",
    "logmodel = sm.GLM(Y_train, X_train_sm, family=sm.families.Binomial())\n",
    "res = logmodel.fit()\n",
    "res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It seems the p-values are less we can check the [Variance Inflation Factor](https://www.statsmodels.org/stable/generated/statsmodels.stats.outliers_influence.variance_inflation_factor.html?highlight=variance_inflation_factor) to see if there is any `correlation` between the variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Features</th>\n",
       "      <th>vif</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Lead Origin_Lead Add Form</td>\n",
       "      <td>0.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Specialization_Travel and Tourism</td>\n",
       "      <td>1.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Lead Source_Direct Traffic</td>\n",
       "      <td>0.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Lead Source_Welingak Website</td>\n",
       "      <td>1.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Last Activity_SMS Sent</td>\n",
       "      <td>0.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Last Notable Activity_Modified</td>\n",
       "      <td>0.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Last Notable Activity_Olark Chat Conversation</td>\n",
       "      <td>1.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Last Notable Activity_SMS Sent</td>\n",
       "      <td>0.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Tags_Already a student</td>\n",
       "      <td>0.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Tags_Closed by Horizzon</td>\n",
       "      <td>1.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Tags_Interested  in full time MBA</td>\n",
       "      <td>1.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Tags_Interested in other courses</td>\n",
       "      <td>0.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Tags_Lost to EINS</td>\n",
       "      <td>1.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Tags_Not doing further education</td>\n",
       "      <td>1.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Tags_Other_Tags</td>\n",
       "      <td>1.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Tags_Ringing</td>\n",
       "      <td>0.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Tags_Will revert after reading the email</td>\n",
       "      <td>0.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Tags_switched off</td>\n",
       "      <td>1.05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Features   vif\n",
       "0                       Lead Origin_Lead Add Form  0.49\n",
       "1               Specialization_Travel and Tourism  1.02\n",
       "2                      Lead Source_Direct Traffic  0.16\n",
       "3                    Lead Source_Welingak Website  1.32\n",
       "4                          Last Activity_SMS Sent  0.22\n",
       "5                  Last Notable Activity_Modified  0.11\n",
       "6   Last Notable Activity_Olark Chat Conversation  1.01\n",
       "7                  Last Notable Activity_SMS Sent  0.91\n",
       "8                          Tags_Already a student  0.22\n",
       "9                         Tags_Closed by Horizzon  1.15\n",
       "10              Tags_Interested  in full time MBA  1.02\n",
       "11               Tags_Interested in other courses  0.29\n",
       "12                              Tags_Lost to EINS  1.05\n",
       "13               Tags_Not doing further education  1.04\n",
       "14                                Tags_Other_Tags  1.05\n",
       "15                                   Tags_Ringing  0.06\n",
       "16       Tags_Will revert after reading the email  0.08\n",
       "17                              Tags_switched off  1.05"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "VIF = pd.DataFrame()\n",
    "VIF['Features'] = X_train[features].columns\n",
    "VIF['vif'] = [variance_inflation_factor(X_train[features].values, i) for i in range(X_train[features].shape[1])]\n",
    "VIF['vif'] = round(VIF['vif'],2)\n",
    "VIF"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since vif for features are low, so there is not variable that has highly collinear with the other explanatory variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Converted</th>\n",
       "      <th>Converted_Pred</th>\n",
       "      <th>Predicted</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6457</th>\n",
       "      <td>0</td>\n",
       "      <td>0.019416</td>\n",
       "      <td>0</td>\n",
       "      <td>6457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3456</th>\n",
       "      <td>1</td>\n",
       "      <td>0.997984</td>\n",
       "      <td>1</td>\n",
       "      <td>3456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4702</th>\n",
       "      <td>0</td>\n",
       "      <td>0.007753</td>\n",
       "      <td>0</td>\n",
       "      <td>4702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2773</th>\n",
       "      <td>1</td>\n",
       "      <td>0.975034</td>\n",
       "      <td>1</td>\n",
       "      <td>2773</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7976</th>\n",
       "      <td>0</td>\n",
       "      <td>0.042570</td>\n",
       "      <td>0</td>\n",
       "      <td>7976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1495</th>\n",
       "      <td>0</td>\n",
       "      <td>0.004408</td>\n",
       "      <td>0</td>\n",
       "      <td>1495</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1006</th>\n",
       "      <td>0</td>\n",
       "      <td>0.212604</td>\n",
       "      <td>0</td>\n",
       "      <td>1006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4565</th>\n",
       "      <td>0</td>\n",
       "      <td>0.064397</td>\n",
       "      <td>0</td>\n",
       "      <td>4565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6014</th>\n",
       "      <td>0</td>\n",
       "      <td>0.688583</td>\n",
       "      <td>1</td>\n",
       "      <td>6014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>584</th>\n",
       "      <td>0</td>\n",
       "      <td>0.004408</td>\n",
       "      <td>0</td>\n",
       "      <td>584</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Converted  Converted_Pred  Predicted    ID\n",
       "6457          0        0.019416          0  6457\n",
       "3456          1        0.997984          1  3456\n",
       "4702          0        0.007753          0  4702\n",
       "2773          1        0.975034          1  2773\n",
       "7976          0        0.042570          0  7976\n",
       "1495          0        0.004408          0  1495\n",
       "1006          0        0.212604          0  1006\n",
       "4565          0        0.064397          0  4565\n",
       "6014          0        0.688583          1  6014\n",
       "584           0        0.004408          0   584"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_train_pred = res.predict(X_train_sm)\n",
    "predicted = Y_train_pred.map(lambda r: 1 if r>=0.5 else 0)\n",
    "Train_results = pd.DataFrame({\"Converted\":Y_train, \"Converted_Pred\":Y_train_pred, 'Predicted':predicted})\n",
    "Train_results['ID'] = Y_train.index\n",
    "Train_results.tail(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = '2.8.2'></a>\n",
    "### 2.8.2 Evaluate Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confusion Matrix is: \n",
      " [[3720  131]\n",
      " [ 312 1985]] \n",
      " ============================================= \n",
      " Train accuracy: 0.93\n"
     ]
    }
   ],
   "source": [
    "Confusion = metrics.confusion_matrix(Train_results.Converted, Train_results.Predicted)\n",
    "print(\"Confusion Matrix is:\",'\\n', Confusion,'\\n',\n",
    "      '='*45, \"\\n\",\n",
    "      'Train accuracy:', round(metrics.accuracy_score(Train_results.Converted, Train_results.Predicted),2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F1_Score for training data is:  0.9226190476190477\n"
     ]
    }
   ],
   "source": [
    "TP = Confusion[0,0] # true positive \n",
    "TN = Confusion[1,1] # true negatives\n",
    "FP = Confusion[1,0] # false positives\n",
    "FN = Confusion[0,1] # false negatives\n",
    "precision = TP/(TP+FP)\n",
    "Recall = TP / (TP + FP)\n",
    "F1_Score = (2*precision * Recall) / (precision+Recall)\n",
    "print(\"F1_Score for training data is: \", F1_Score)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Receiver operating characteristic**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Roc_curve(actual, probs):\n",
    "    \n",
    "    fpr, tpr, thresholds = metrics.roc_curve( actual, probs, drop_intermediate = False)\n",
    "    auc_score = metrics.roc_auc_score( actual, probs )\n",
    "    plt.figure(figsize=(5, 5))\n",
    "    plt.plot( fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score )\n",
    "    plt.plot([0, 1], [0, 1], 'k--')\n",
    "    plt.xlim([0.0, 1.0])\n",
    "    plt.ylim([0.0, 1.05])\n",
    "    plt.xlabel('False Positive Rate or [1 - True Negative Rate]')\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.title('Receiver operating characteristic example')\n",
    "    plt.legend(loc=\"lower right\")\n",
    "    plt.show()\n",
    "\n",
    "    return None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Roc_curve(Train_results.Converted, Train_results.Converted_Pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The ROC Curve should be a value close to 1. We are getting a good value of 0.97 indicating a good predictive model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy for test data is:  0.91\n"
     ]
    }
   ],
   "source": [
    "#Let's check test data\n",
    "X_test_sm = sm.add_constant(X_test[features])\n",
    "Y_test_pred = res.predict(X_test_sm)\n",
    "Y_test_pred = Y_test_pred.map(lambda x:1 if x>=0.5 else 0)\n",
    "accuracy = metrics.accuracy_score(Y_test, Y_test_pred)\n",
    "print('Accuracy for test data is: ', round(accuracy,2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a name = '3'></a>\n",
    "### 3 References:\n",
    "- [Machine Learning Specialization, DeepLearning.AI](https://www.deeplearning.ai/courses/machine-learning-specialization/)\n",
    "- [Kaggle, X_Education problem Lead Score guideline](https://www.kaggle.com/code/amolbhone/lead-score-upgrad-case-study-about-x-education/data)\n",
    "- [statsmodels: Econometric and statistical modeling with python](https://conference.scipy.org/proceedings/scipy2010/pdfs/seabold.pdf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
